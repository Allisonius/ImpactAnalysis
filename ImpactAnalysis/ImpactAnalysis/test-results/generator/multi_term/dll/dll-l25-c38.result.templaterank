nxt
pre
elem
header
(nxt.n1)
(nxt.n2)
(pre.n1)
(pre.n2)
(elem.Int)
(header.n1)
(header.n2)
(n1.nxt)
(n1.pre)
(n2.nxt)
(n2.pre)
(n1.elem)
(n2.elem)
(nxt.nxt)
(nxt.pre)
(pre.nxt)
(pre.pre)
(nxt.elem)
(pre.elem)
(header.nxt)
(header.pre)
(header.elem)
n1
n2
(~nxt)
(~pre)
(~elem)
(~header)
(n1.(nxt.nxt))
(n1.(nxt.pre))
(n1.(pre.nxt))
(n1.(pre.pre))
(n2.(nxt.nxt))
(n2.(nxt.pre))
(n2.(pre.nxt))
(n2.(pre.pre))
(n1.(nxt.elem))
(n1.(pre.elem))
(n2.(nxt.elem))
(n2.(pre.elem))
(^nxt)
(^pre)
(*nxt)
(*pre)
DLL
Node
(Node.nxt)
(Node.pre)
(Node.elem)
(DLL.header)
(n1.(*nxt))
(n1.(*pre))
(n2.(*nxt))
(n2.(*pre))
(n1.(^nxt))
(n1.(^pre))
(n2.(^nxt))
(n2.(^pre))
(Node.(nxt.nxt))
(Node.(nxt.pre))
(Node.(pre.nxt))
(Node.(pre.pre))
(Node.(nxt.elem))
(Node.(pre.elem))
(DLL.(header.nxt))
(DLL.(header.pre))
(DLL.(header.elem))
(n1&n2)
(n1+n2)
(n1-n2)
(n2-n1)
(Node-n1)
(Node-n2)
(nxt-pre)
(pre&nxt)
(pre+nxt)
(pre-nxt)
(n1&(n1-n2))
(n1&(n2-n1))
(n2&(n1-n2))
(n2&(n2-n1))
(none->none)
((Node-n1)-n2)
((Node-n2)-n1)
(Node-(n1&n2))
(Node-(n1-n2))
(Node-(n2-n1))
(n1&(Node-n1))
(n1&(Node-n2))
(n1+(Node-n2))
(n1-(Node-n2))
(n2&(Node-n1))
(n2&(Node-n2))
(n2+(Node-n1))
(n2-(Node-n1))
(nxt&(nxt-pre))
(nxt&(pre-nxt))
(pre&(nxt-pre))
(pre&(pre-nxt))
(none->none->none)
(nxt.Node)
(nxt.univ)
(pre.Node)
(pre.univ)
(univ.nxt)
(univ.pre)
(elem.univ)
(univ.elem)
((n1&n2).nxt)
((n1&n2).pre)
((n1+n2).nxt)
((n1+n2).pre)
((n1-n2).nxt)
((n1-n2).pre)
((n1.nxt)-n1)
((n1.nxt)-n2)
((n1.pre)-n1)
((n1.pre)-n2)
((n2-n1).nxt)
((n2-n1).pre)
((n2.nxt)-n1)
((n2.nxt)-n2)
((n2.pre)-n1)
((n2.pre)-n2)
((nxt.n1)-n1)
((nxt.n1)-n2)
((nxt.n2)-n1)
((nxt.n2)-n2)
((pre.n1)-n1)
((pre.n1)-n2)
((pre.n2)-n1)
((pre.n2)-n2)
(header.Node)
(header.univ)
(n1&(n1.nxt))
(n1&(n1.pre))
(n1&(n2.nxt))
(n1&(n2.pre))
(n1&(nxt.n1))
(n1&(nxt.n2))
(n1&(pre.n1))
(n1&(pre.n2))
(n1+(n1.nxt))
(n1+(n1.pre))
(n1+(n2.nxt))
(n1+(n2.pre))
(n1+(nxt.n1))
(n1+(nxt.n2))
(n1+(pre.n1))
(n1+(pre.n2))
(n1-(n1.nxt))
(n1-(n1.pre))
(n1-(n2.nxt))
(n1-(n2.pre))
(n1-(nxt.n1))
(n1-(nxt.n2))
(n1-(pre.n1))
(n1-(pre.n2))
(n2&(n1.nxt))
(n2&(n1.pre))
(n2&(n2.nxt))
(n2&(n2.pre))
(n2&(nxt.n1))
(n2&(nxt.n2))
(n2&(pre.n1))
(n2&(pre.n2))
(n2+(n1.nxt))
(n2+(n1.pre))
(n2+(n2.nxt))
(n2+(n2.pre))
(n2+(nxt.n1))
(n2+(nxt.n2))
(n2+(pre.n1))
(n2+(pre.n2))
(n2-(n1.nxt))
(n2-(n1.pre))
(n2-(n2.nxt))
(n2-(n2.pre))
(n2-(nxt.n1))
(n2-(nxt.n2))
(n2-(pre.n1))
(n2-(pre.n2))
(nxt.(n1&n2))
(nxt.(n1+n2))
(nxt.(n1-n2))
(nxt.(n2-n1))
(pre.(n1&n2))
(pre.(n1+n2))
(pre.(n1-n2))
(pre.(n2-n1))
(univ.header)
((n1&n2).elem)
((n1+n2).elem)
((n1-n2).elem)
((n2-n1).elem)
((nxt-pre).n1)
((nxt-pre).n2)
((pre&nxt).n1)
((pre&nxt).n2)
((pre+nxt).n1)
((pre+nxt).n2)
((pre-nxt).n1)
((pre-nxt).n2)
(n1.(nxt-pre))
(n1.(pre&nxt))
(n1.(pre+nxt))
(n1.(pre-nxt))
(n2.(nxt-pre))
(n2.(pre&nxt))
(n2.(pre+nxt))
(n2.(pre-nxt))
((Node-n1).nxt)
((Node-n1).pre)
((Node-n2).nxt)
((Node-n2).pre)
((Node.nxt)-n1)
((Node.nxt)-n2)
((Node.pre)-n1)
((Node.pre)-n2)
((elem.Int)-n1)
((elem.Int)-n2)
((nxt-pre).nxt)
((nxt-pre).pre)
((nxt.Node)-n1)
((nxt.Node)-n2)
((nxt.nxt)-nxt)
((nxt.nxt)-pre)
((nxt.pre)-nxt)
((nxt.pre)-pre)
((nxt.univ)-n1)
((nxt.univ)-n2)
((pre&nxt).nxt)
((pre&nxt).pre)
((pre+nxt).nxt)
((pre+nxt).pre)
((pre-nxt).nxt)
((pre-nxt).pre)
((pre.Node)-n1)
((pre.Node)-n2)
((pre.nxt)-nxt)
((pre.nxt)-pre)
((pre.pre)-nxt)
((pre.pre)-pre)
((pre.univ)-n1)
((pre.univ)-n2)
((univ.nxt)-n1)
((univ.nxt)-n2)
((univ.pre)-n1)
((univ.pre)-n2)
(Int-(n1.elem))
(Int-(n2.elem))
(Node-(n1.nxt))
(Node-(n1.pre))
(Node-(n2.nxt))
(Node-(n2.pre))
(Node-(nxt.n1))
(Node-(nxt.n2))
(Node-(pre.n1))
(Node-(pre.n2))
(n1&(Node.nxt))
(n1&(Node.pre))
(n1&(elem.Int))
(n1&(nxt.Node))
(n1&(nxt.univ))
(n1&(pre.Node))
(n1&(pre.univ))
(n1&(univ.nxt))
(n1&(univ.pre))
(n1+(Node.nxt))
(n1+(Node.pre))
(n1+(elem.Int))
(n1+(nxt.Node))
(n1+(nxt.univ))
(n1+(pre.Node))
(n1+(pre.univ))
(n1+(univ.nxt))
(n1+(univ.pre))
(n1-(Node.nxt))
(n1-(Node.pre))
(n1-(elem.Int))
(n1-(nxt.Node))
(n1-(nxt.univ))
(n1-(pre.Node))
(n1-(pre.univ))
(n1-(univ.nxt))
(n1-(univ.pre))
(n2&(Node.nxt))
(n2&(Node.pre))
(n2&(elem.Int))
(n2&(nxt.Node))
(n2&(nxt.univ))
(n2&(pre.Node))
(n2&(pre.univ))
(n2&(univ.nxt))
(n2&(univ.pre))
(n2+(Node.nxt))
(n2+(Node.pre))
(n2+(elem.Int))
(n2+(nxt.Node))
(n2+(nxt.univ))
(n2+(pre.Node))
(n2+(pre.univ))
(n2+(univ.nxt))
(n2+(univ.pre))
(n2-(Node.nxt))
(n2-(Node.pre))
(n2-(elem.Int))
(n2-(nxt.Node))
(n2-(nxt.univ))
(n2-(pre.Node))
(n2-(pre.univ))
(n2-(univ.nxt))
(n2-(univ.pre))
(nxt&(nxt.nxt))
(nxt&(nxt.pre))
(nxt&(pre.nxt))
(nxt&(pre.pre))
(nxt+(nxt.nxt))
(nxt+(nxt.pre))
(nxt+(pre.nxt))
(nxt+(pre.pre))
(nxt-(nxt.nxt))
(nxt-(nxt.pre))
(nxt-(pre.nxt))
(nxt-(pre.pre))
(nxt.(Node-n1))
(nxt.(Node-n2))
(nxt.(nxt-pre))
(nxt.(pre&nxt))
(nxt.(pre+nxt))
(nxt.(pre-nxt))
(pre&(nxt.nxt))
(pre&(nxt.pre))
(pre&(pre.nxt))
(pre&(pre.pre))
(pre+(nxt.nxt))
(pre+(nxt.pre))
(pre+(pre.nxt))
(pre+(pre.pre))
(pre-(nxt.nxt))
(pre-(nxt.pre))
(pre-(pre.nxt))
(pre-(pre.pre))
(pre.(Node-n1))
(pre.(Node-n2))
(pre.(nxt-pre))
(pre.(pre&nxt))
(pre.(pre+nxt))
(pre.(pre-nxt))
((Node-n1).elem)
((Node-n2).elem)
((elem.univ)-n1)
((elem.univ)-n2)
((nxt-pre).Node)
((nxt-pre).elem)
((nxt-pre).univ)
((pre&nxt).Node)
((pre&nxt).elem)
((pre&nxt).univ)
((pre+nxt).Node)
((pre+nxt).elem)
((pre+nxt).univ)
((pre-nxt).Node)
((pre-nxt).elem)
((pre-nxt).univ)
(Node.(nxt-pre))
(Node.(pre&nxt))
(Node.(pre+nxt))
(Node.(pre-nxt))
(header.(n1&n2))
(header.(n1+n2))
(header.(n1-n2))
(header.(n2-n1))
(n1&(elem.univ))
(n1+(elem.univ))
(n1-(elem.univ))
(n2&(elem.univ))
(n2+(elem.univ))
(n2-(elem.univ))
(univ.(nxt-pre))
(univ.(pre&nxt))
(univ.(pre+nxt))
(univ.(pre-nxt))
((DLL.header)-n1)
((DLL.header)-n2)
((nxt.elem)-elem)
((pre.elem)-elem)
(DLL-(header.n1))
(DLL-(header.n2))
(Int-(Node.elem))
(Int-(univ.elem))
(Node-(Node.nxt))
(Node-(Node.pre))
(Node-(elem.Int))
(Node-(nxt.Node))
(Node-(nxt.univ))
(Node-(pre.Node))
(Node-(pre.univ))
(Node-(univ.nxt))
(Node-(univ.pre))
(elem&(nxt.elem))
(elem&(pre.elem))
(elem+(nxt.elem))
(elem+(pre.elem))
(elem-(nxt.elem))
(elem-(pre.elem))
(n1&(DLL.header))
(n1+(DLL.header))
(n1-(DLL.header))
(n2&(DLL.header))
(n2+(DLL.header))
(n2-(DLL.header))
((univ.header)-n1)
((univ.header)-n2)
(Node-(elem.univ))
(header.(Node-n1))
(header.(Node-n2))
(header.(nxt-pre))
(header.(pre&nxt))
(header.(pre+nxt))
(header.(pre-nxt))
(n1&(univ.header))
(n1+(univ.header))
(n1-(univ.header))
(n2&(univ.header))
(n2+(univ.header))
(n2-(univ.header))
(DLL-(header.Node))
(DLL-(header.univ))
(Node-(DLL.header))
(Node-(univ.header))
((header.nxt)-header)
((header.pre)-header)
(header&(header.nxt))
(header&(header.pre))
(header+(header.nxt))
(header+(header.pre))
(header-(header.nxt))
(header-(header.pre))
((nxt.n1).nxt)
((nxt.n1).pre)
((nxt.n2).nxt)
((nxt.n2).pre)
((pre.n1).nxt)
((pre.n1).pre)
((pre.n2).nxt)
((pre.n2).pre)
(nxt.(n1.nxt))
(nxt.(n1.pre))
(nxt.(n2.nxt))
(nxt.(n2.pre))
(nxt.(nxt.n1))
(nxt.(nxt.n2))
(nxt.(pre.n1))
(nxt.(pre.n2))
(pre.(n1.nxt))
(pre.(n1.pre))
(pre.(n2.nxt))
(pre.(n2.pre))
(pre.(nxt.n1))
(pre.(nxt.n2))
(pre.(pre.n1))
(pre.(pre.n2))
((nxt.n1).elem)
((nxt.n2).elem)
((pre.n1).elem)
((pre.n2).elem)
(nxt.(nxt.nxt))
(nxt.(nxt.pre))
(nxt.(pre.nxt))
(nxt.(pre.pre))
(pre.(nxt.nxt))
(pre.(nxt.pre))
(pre.(pre.nxt))
(pre.(pre.pre))
((elem.Int).nxt)
((elem.Int).pre)
((nxt.Node).nxt)
((nxt.Node).pre)
((nxt.univ).nxt)
((nxt.univ).pre)
((pre.Node).nxt)
((pre.Node).pre)
((pre.univ).nxt)
((pre.univ).pre)
(elem.(n1.elem))
(elem.(n2.elem))
(nxt.(Node.nxt))
(nxt.(Node.pre))
(nxt.(elem.Int))
(nxt.(nxt.Node))
(nxt.(nxt.elem))
(nxt.(nxt.univ))
(nxt.(pre.Node))
(nxt.(pre.elem))
(nxt.(pre.univ))
(nxt.(univ.nxt))
(nxt.(univ.pre))
(pre.(Node.nxt))
(pre.(Node.pre))
(pre.(elem.Int))
(pre.(nxt.Node))
(pre.(nxt.elem))
(pre.(nxt.univ))
(pre.(pre.Node))
(pre.(pre.elem))
(pre.(pre.univ))
(pre.(univ.nxt))
(pre.(univ.pre))
(univ.(nxt.nxt))
(univ.(nxt.pre))
(univ.(pre.nxt))
(univ.(pre.pre))
((elem.Int).elem)
((elem.univ).nxt)
((elem.univ).pre)
((nxt.Node).elem)
((nxt.univ).elem)
((pre.Node).elem)
((pre.univ).elem)
(header.(n1.nxt))
(header.(n1.pre))
(header.(n2.nxt))
(header.(n2.pre))
(header.(nxt.n1))
(header.(nxt.n2))
(header.(pre.n1))
(header.(pre.n2))
(nxt.(elem.univ))
(pre.(elem.univ))
(univ.(nxt.elem))
(univ.(pre.elem))
((elem.univ).elem)
(elem.(Node.elem))
(elem.(univ.elem))
(header.(nxt.nxt))
(header.(nxt.pre))
(header.(pre.nxt))
(header.(pre.pre))
(nxt.(DLL.header))
(pre.(DLL.header))
(header.(Node.nxt))
(header.(Node.pre))
(header.(elem.Int))
(header.(nxt.Node))
(header.(nxt.elem))
(header.(nxt.univ))
(header.(pre.Node))
(header.(pre.elem))
(header.(pre.univ))
(header.(univ.nxt))
(header.(univ.pre))
(nxt.(univ.header))
(pre.(univ.header))
(univ.(header.nxt))
(univ.(header.pre))
((header.n1).header)
((header.n2).header)
(header.(elem.univ))
(univ.(header.elem))
(header.(DLL.header))
((header.Node).header)
((header.univ).header)
(header.(univ.header))
((~nxt)-nxt)
((~nxt)-pre)
((~pre)-nxt)
((~pre)-pre)
(nxt&(~nxt))
(nxt&(~pre))
(nxt+(~nxt))
(nxt+(~pre))
(nxt-(~nxt))
(nxt-(~pre))
(pre&(~nxt))
(pre&(~pre))
(pre+(~nxt))
(pre+(~pre))
(pre-(~nxt))
(pre-(~pre))
(~(nxt-pre))
(~(pre&nxt))
(~(pre+nxt))
(~(pre-nxt))
((^nxt)-nxt)
((^nxt)-pre)
((^pre)-nxt)
((^pre)-pre)
(^(nxt-pre))
(^(pre&nxt))
(^(pre+nxt))
(^(pre-nxt))
(nxt&(^pre))
(nxt+(^pre))
(nxt-(^pre))
(pre&(^nxt))
(pre+(^nxt))
(pre-(^nxt))
((*nxt)-nxt)
((*nxt)-pre)
((*pre)-nxt)
((*pre)-pre)
(*(nxt-pre))
(*(pre&nxt))
(*(pre+nxt))
(*(pre-nxt))
(nxt&(*pre))
(nxt+(*pre))
(nxt-(*pre))
(pre&(*nxt))
(pre+(*nxt))
(pre-(*nxt))
((~nxt).n1)
((~nxt).n2)
((~pre).n1)
((~pre).n2)
((~elem).n1)
((~elem).n2)
((~nxt).nxt)
((~nxt).pre)
((~pre).nxt)
((~pre).pre)
(nxt.(~nxt))
(nxt.(~pre))
(pre.(~nxt))
(pre.(~pre))
(~(nxt.nxt))
(~(nxt.pre))
(~(pre.nxt))
(~(pre.pre))
((~elem).nxt)
((~elem).pre)
((~nxt).Node)
((~nxt).elem)
((~nxt).univ)
((~pre).Node)
((~pre).elem)
((~pre).univ)
(~(nxt.elem))
(~(pre.elem))
((~elem).Node)
((~elem).elem)
((~elem).univ)
(elem.(~elem))
((~header).DLL)
(header.(~nxt))
(header.(~pre))
(nxt.(~header))
(pre.(~header))
(~(header.nxt))
(~(header.pre))
((~header).univ)
(~(header.elem))
((~header).header)
(header.(~header))
((^nxt).n1)
((^nxt).n2)
((^pre).n1)
((^pre).n2)
((^nxt).pre)
((^pre).nxt)
(^(nxt.nxt))
(^(nxt.pre))
(^(pre.nxt))
(^(pre.pre))
(nxt.(^nxt))
(nxt.(^pre))
(pre.(^nxt))
(pre.(^pre))
((^nxt).elem)
((^pre).elem)
(header.(^nxt))
(header.(^pre))
((*nxt).n1)
((*nxt).n2)
((*pre).n1)
((*pre).n2)
((*nxt).pre)
((*pre).nxt)
(*(nxt.nxt))
(*(nxt.pre))
(*(pre.nxt))
(*(pre.pre))
(nxt.(*pre))
(pre.(*nxt))
((*nxt).elem)
((*pre).elem)
(header.(*nxt))
(header.(*pre))
(^(~nxt))
(^(~pre))
(*(~nxt))
(*(~pre))
Int
none
univ
String