(s1.teaches)
(s1.enrolled)
(s1.projects)
Grade
Course
Person
Project
Student
Professor
grades
teaches
enrolled
projects
(Course.grades)
(Person.teaches)
(Course.projects)
(Person.enrolled)
(Person.projects)
(Student.teaches)
(Student.enrolled)
(Student.projects)
(Professor.teaches)
(Professor.enrolled)
(Professor.projects)
(s1.(teaches.grades))
(s1.(enrolled.grades))
(s1.(teaches.projects))
(s1.(enrolled.projects))
s1
Next
First
ordering/Ord
(ordering/Ord.Next)
(ordering/Ord.First)
(~teaches)
(~enrolled)
(~projects)
(Person.(teaches.grades))
(Person.(enrolled.grades))
(Student.(teaches.grades))
(Person.(teaches.projects))
(Student.(enrolled.grades))
(Person.(enrolled.projects))
(Professor.(teaches.grades))
(Student.(teaches.projects))
(Professor.(enrolled.grades))
(Student.(enrolled.projects))
(Professor.(teaches.projects))
(Professor.(enrolled.projects))
(Person-s1)
(Student&s1)
(Student+s1)
(Student-s1)
(none->none)
(s1-Student)
(Professor&s1)
(Professor+s1)
(Professor-s1)
(s1-Professor)
(Person-Student)
(s1&(Person-s1))
(s1&(Student-s1))
(s1&(s1-Student))
(Person-Professor)
(enrolled-teaches)
(none->none->none)
(teaches&enrolled)
(teaches+enrolled)
(teaches-enrolled)
(Professor&Student)
(Professor+Student)
(Professor-Student)
(Student-Professor)
(s1&(Professor-s1))
(s1&(s1-Professor))
((Person-Student)-s1)
((Person-s1)-Student)
(Person-(Student&s1))
(Person-(Student-s1))
(Person-(s1-Student))
(Student&(Person-s1))
(Student+(Person-s1))
(Student-(Person-s1))
(s1&(Person-Student))
(s1+(Person-Student))
(s1-(Person-Student))
(Student&(Student-s1))
(Student&(s1-Student))
((Person-Professor)-s1)
((Person-s1)-Professor)
(Person-(Professor&s1))
(Person-(Professor-s1))
(Person-(s1-Professor))
(Professor&(Person-s1))
(Professor+(Person-s1))
(Professor-(Person-s1))
(s1&(Person-Professor))
(s1+(Person-Professor))
(s1-(Person-Professor))
((Professor+Student)-s1)
((Professor+s1)-Student)
((Professor-Student)-s1)
((Professor-s1)-Student)
((Student+s1)-Professor)
((Student-Professor)-s1)
((Student-s1)-Professor)
((s1-Professor)-Student)
((s1-Student)-Professor)
(Professor&(Student&s1))
(Professor&(Student+s1))
(Professor&(Student-s1))
(Professor&(s1-Student))
(Professor+(Student&s1))
(Professor+(Student+s1))
(Professor+(Student-s1))
(Professor+(s1-Student))
(Professor-(Student&s1))
(Professor-(Student-s1))
(Professor-(s1-Student))
(Student&(Professor&s1))
(Student&(Professor+s1))
(Student&(Professor-s1))
(Student&(s1-Professor))
(Student+(Professor&s1))
(Student+(Professor+s1))
(Student+(Professor-s1))
(Student+(s1-Professor))
(Student-(Professor&s1))
(Student-(Professor-s1))
(Student-(s1-Professor))
(s1&(Professor&Student))
(s1&(Professor+Student))
(s1&(Professor-Student))
(s1&(Student-Professor))
(s1+(Professor&Student))
(s1+(Professor+Student))
(s1+(Professor-Student))
(s1+(Student-Professor))
(s1-(Professor&Student))
(s1-(Professor-Student))
(s1-(Student-Professor))
(Professor&(Professor-s1))
(Professor&(s1-Professor))
(Student&(Person-Student))
((Person-Professor)-Student)
((Person-Student)-Professor)
(Person-(Professor&Student))
(Person-(Professor-Student))
(Person-(Student-Professor))
(Professor&(Person-Student))
(Professor+(Person-Student))
(Professor-(Person-Student))
(Student&(Person-Professor))
(Student+(Person-Professor))
(Student-(Person-Professor))
(teaches&(enrolled-teaches))
(teaches&(teaches-enrolled))
(Student&(Professor-Student))
(Student&(Student-Professor))
(enrolled&(enrolled-teaches))
(enrolled&(teaches-enrolled))
(Professor&(Person-Professor))
(Professor&(Professor-Student))
(Professor&(Student-Professor))
(Next.univ)
(univ.Next)
(First.univ)
(Next.Grade)
(univ.First)
(First.Grade)
(grades.univ)
(univ.grades)
(grades.Grade)
(teaches.univ)
(univ.teaches)
(enrolled.univ)
(projects.univ)
(univ.enrolled)
(univ.projects)
(teaches.Course)
(teaches.grades)
(enrolled.Course)
(enrolled.grades)
(projects.Project)
(teaches.projects)
((Next.univ)-First)
((teaches.univ)-s1)
(First&(Next.univ))
(First+(Next.univ))
(First-(Next.univ))
(enrolled.projects)
(s1&(teaches.univ))
(s1+(teaches.univ))
(s1-(teaches.univ))
((Next.Grade)-First)
((enrolled.univ)-s1)
((projects.univ)-s1)
(First&(Next.Grade))
(First+(Next.Grade))
(First-(Next.Grade))
(Grade-(univ.First))
(s1&(enrolled.univ))
(s1&(projects.univ))
(s1+(enrolled.univ))
(s1+(projects.univ))
(s1-(enrolled.univ))
(s1-(projects.univ))
((Person-s1).teaches)
((teaches.Course)-s1)
(Course-(s1.teaches))
(s1&(teaches.Course))
(s1+(teaches.Course))
(s1-(teaches.Course))
((Person-s1).enrolled)
((Person-s1).projects)
((Student&s1).teaches)
((Student+s1).teaches)
((Student-s1).teaches)
((enrolled.Course)-s1)
((s1-Student).teaches)
(Course-(s1.enrolled))
(s1&(enrolled.Course))
(s1+(enrolled.Course))
(s1-(enrolled.Course))
((Student&s1).enrolled)
((Student&s1).projects)
((Student+s1).enrolled)
((Student+s1).projects)
((Student-s1).enrolled)
((Student-s1).projects)
((projects.Project)-s1)
((s1-Student).enrolled)
((s1-Student).projects)
(Course-(univ.teaches))
(Person-(teaches.univ))
(Project-(s1.projects))
(s1&(projects.Project))
(s1+(projects.Project))
(s1-(projects.Project))
(s1.(enrolled-teaches))
(s1.(teaches&enrolled))
(s1.(teaches+enrolled))
(s1.(teaches-enrolled))
((Professor&s1).teaches)
((Professor+s1).teaches)
((Professor-s1).teaches)
((s1-Professor).teaches)
((teaches.univ)-Student)
(Course-(projects.univ))
(Course-(univ.enrolled))
(Person-(enrolled.univ))
(Person-(projects.univ))
(Student&(teaches.univ))
(Student+(teaches.univ))
(Student-(teaches.univ))
((Professor&s1).enrolled)
((Professor&s1).projects)
((Professor+s1).enrolled)
((Professor+s1).projects)
((Professor-s1).enrolled)
((Professor-s1).projects)
((enrolled-teaches).univ)
((enrolled.univ)-Student)
((projects.univ)-Student)
((s1-Professor).enrolled)
((s1-Professor).projects)
((teaches&enrolled).univ)
((teaches+enrolled).univ)
((teaches-enrolled).univ)
(Course-(Person.teaches))
(Person-(teaches.Course))
(Project-(univ.projects))
(Student&(enrolled.univ))
(Student&(projects.univ))
(Student+(enrolled.univ))
(Student+(projects.univ))
(Student-(enrolled.univ))
(Student-(projects.univ))
(univ.(enrolled-teaches))
(univ.(teaches&enrolled))
(univ.(teaches+enrolled))
(univ.(teaches-enrolled))
((Person-Student).teaches)
((teaches.Course)-Student)
((teaches.univ)-Professor)
(Course-(Person.enrolled))
(Course-(Student.teaches))
(Person-(enrolled.Course))
(Professor&(teaches.univ))
(Professor+(teaches.univ))
(Professor-(teaches.univ))
(Student&(teaches.Course))
(Student+(teaches.Course))
(Student-(teaches.Course))
((Person-Student).enrolled)
((Person-Student).projects)
((enrolled-teaches).Course)
((enrolled-teaches).grades)
((enrolled.Course)-Student)
((enrolled.univ)-Professor)
((projects.univ)-Professor)
((teaches&enrolled).Course)
((teaches&enrolled).grades)
((teaches+enrolled).Course)
((teaches+enrolled).grades)
((teaches-enrolled).Course)
((teaches-enrolled).grades)
(Course-(Student.enrolled))
(Course-(projects.Project))
(Person-(projects.Project))
(Person.(enrolled-teaches))
(Person.(teaches&enrolled))
(Person.(teaches+enrolled))
(Person.(teaches-enrolled))
(Professor&(enrolled.univ))
(Professor&(projects.univ))
(Professor+(enrolled.univ))
(Professor+(projects.univ))
(Professor-(enrolled.univ))
(Professor-(projects.univ))
(Project-(Course.projects))
(Project-(Person.projects))
(Student&(enrolled.Course))
(Student+(enrolled.Course))
(Student-(enrolled.Course))
(ordering/Ord-(First.univ))
((Person-Professor).teaches)
((projects.Project)-Student)
((teaches.Course)-Professor)
(Course-(Professor.teaches))
(Grade-(ordering/Ord.First))
(Professor&(teaches.Course))
(Professor+(teaches.Course))
(Professor-(teaches.Course))
(Project-(Student.projects))
(Student&(projects.Project))
(Student+(projects.Project))
(Student-(projects.Project))
(Student.(enrolled-teaches))
(Student.(teaches&enrolled))
(Student.(teaches+enrolled))
(Student.(teaches-enrolled))
(ordering/Ord-(First.Grade))
((Person-Professor).enrolled)
((Person-Professor).projects)
((Professor&Student).teaches)
((Professor+Student).teaches)
((Professor-Student).teaches)
((Student-Professor).teaches)
((enrolled-teaches).projects)
((enrolled.Course)-Professor)
((teaches&enrolled).projects)
((teaches+enrolled).projects)
((teaches-enrolled).projects)
((teaches.projects)-projects)
(Course-(Professor.enrolled))
(Professor&(enrolled.Course))
(Professor+(enrolled.Course))
(Professor-(enrolled.Course))
(projects&(teaches.projects))
(projects+(teaches.projects))
(projects-(teaches.projects))
((Professor&Student).enrolled)
((Professor&Student).projects)
((Professor+Student).enrolled)
((Professor+Student).projects)
((Professor-Student).enrolled)
((Professor-Student).projects)
((Student-Professor).enrolled)
((Student-Professor).projects)
((enrolled.projects)-projects)
((projects.Project)-Professor)
(Professor&(projects.Project))
(Professor+(projects.Project))
(Professor-(projects.Project))
(Professor.(enrolled-teaches))
(Professor.(teaches&enrolled))
(Professor.(teaches+enrolled))
(Professor.(teaches-enrolled))
(Project-(Professor.projects))
(projects&(enrolled.projects))
(projects+(enrolled.projects))
(projects-(enrolled.projects))
((Next.univ).univ)
((grades.univ).s1)
(Next.(univ.Next))
(s1.(univ.grades))
(univ.(Next.univ))
(univ.(univ.Next))
((First.univ).Next)
((Next.Grade).univ)
((Next.univ).Grade)
((grades.Grade).s1)
(First.(univ.Next))
(Grade.(univ.Next))
(Next.(univ.First))
(univ.(Next.Grade))
((First.Grade).Next)
((First.univ).First)
((Next.Grade).Grade)
((grades.univ).univ)
(First.(univ.First))
(grades.(univ.Next))
(s1.(Course.grades))
(univ.(grades.univ))
(univ.(univ.grades))
((First.Grade).First)
((grades.Grade).univ)
(grades.(univ.First))
(univ.(grades.Grade))
((grades.univ).Person)
(Course.(grades.univ))
(Person.(univ.grades))
(teaches.(s1.teaches))
(univ.(Course.grades))
((grades.Grade).Person)
((grades.univ).Student)
((grades.univ).teaches)
(Course.(grades.Grade))
(Student.(univ.grades))
(enrolled.(s1.teaches))
(teaches.(grades.univ))
(teaches.(s1.enrolled))
(univ.(teaches.grades))
((grades.Grade).Student)
((grades.Grade).teaches)
((grades.univ).enrolled)
((grades.univ).projects)
((projects.univ).grades)
((teaches.univ).teaches)
(Person.(Course.grades))
(enrolled.(grades.univ))
(enrolled.(s1.enrolled))
(projects.(s1.projects))
(teaches.(grades.Grade))
(teaches.(univ.teaches))
(univ.(enrolled.grades))
((enrolled.univ).teaches)
((grades.Grade).enrolled)
((grades.Grade).projects)
((grades.univ).Professor)
((projects.univ).teaches)
((teaches.univ).enrolled)
((teaches.univ).projects)
(Professor.(univ.grades))
(Student.(Course.grades))
(enrolled.(grades.Grade))
(enrolled.(univ.teaches))
(teaches.(projects.univ))
(teaches.(univ.enrolled))
(univ.(teaches.projects))
((enrolled.univ).enrolled)
((enrolled.univ).projects)
((grades.Grade).Professor)
((projects.univ).enrolled)
((projects.univ).projects)
((teaches.Course).teaches)
(Next.(ordering/Ord.Next))
(enrolled.(projects.univ))
(enrolled.(univ.enrolled))
(ordering/Ord.(Next.univ))
(projects.(univ.projects))
(teaches.(Person.teaches))
(univ.(enrolled.projects))
(univ.(ordering/Ord.Next))
((enrolled.Course).teaches)
((projects.Project).grades)
((teaches.Course).enrolled)
((teaches.Course).projects)
(First.(ordering/Ord.Next))
(Grade.(ordering/Ord.Next))
(Next.(ordering/Ord.First))
(Professor.(Course.grades))
(enrolled.(Person.teaches))
(ordering/Ord.(Next.Grade))
(teaches.(Person.enrolled))
(teaches.(Student.teaches))
((enrolled.Course).enrolled)
((enrolled.Course).projects)
((projects.Project).teaches)
(First.(ordering/Ord.First))
(enrolled.(Person.enrolled))
(enrolled.(Student.teaches))
(grades.(ordering/Ord.Next))
(projects.(Course.projects))
(projects.(Person.projects))
(teaches.(Student.enrolled))
(teaches.(projects.Project))
((projects.Project).enrolled)
((projects.Project).projects)
(enrolled.(Student.enrolled))
(enrolled.(projects.Project))
(grades.(ordering/Ord.First))
(projects.(Student.projects))
(teaches.(Professor.teaches))
(enrolled.(Professor.teaches))
(teaches.(Professor.enrolled))
(enrolled.(Professor.enrolled))
(projects.(Professor.projects))
(~First)
(~(enrolled-teaches))
(~(teaches&enrolled))
(~(teaches+enrolled))
(~(teaches-enrolled))
(~(Next.univ))
(~(univ.Next))
((~First).Next)
((~First).univ)
((~teaches).s1)
(Next.(~First))
(~(Next.Grade))
((~First).First)
((~enrolled).s1)
((~projects).s1)
(First.(~First))
(~(grades.univ))
(~(univ.grades))
((~teaches).univ)
(grades.(~First))
(~(grades.Grade))
((~enrolled).univ)
((~projects).univ)
(~(Course.grades))
((~teaches).Person)
((~enrolled).Person)
((~projects).Course)
((~projects).Person)
((~projects).grades)
((~teaches).Student)
((~teaches).teaches)
(teaches.(~teaches))
((~enrolled).Student)
((~enrolled).teaches)
((~projects).Student)
((~projects).teaches)
((~teaches).enrolled)
((~teaches).projects)
(enrolled.(~teaches))
(teaches.(~enrolled))
(~(teaches.projects))
((~enrolled).enrolled)
((~enrolled).projects)
((~projects).enrolled)
((~projects).projects)
((~teaches).Professor)
(enrolled.(~enrolled))
(projects.(~projects))
(~(enrolled.projects))
(~(ordering/Ord.Next))
((~First).ordering/Ord)
((~enrolled).Professor)
((~projects).Professor)
(^(univ.Next))
(^(ordering/Ord.Next))
(*(univ.Next))
(*(ordering/Ord.Next))
Int
none
univ
String