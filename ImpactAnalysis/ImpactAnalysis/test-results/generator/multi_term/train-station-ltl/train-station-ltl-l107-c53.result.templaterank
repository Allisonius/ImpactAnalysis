pos
prox
signal
(pos.p)
(prox.p)
(t.pos)
(p.prox)
(p.signal)
(pos.prox)
(prox.prox)
(pos.signal)
(prox.signal)
p
t
(~pos)
(~prox)
(~signal)
(t.(pos.prox))
(p.(prox.prox))
(t.(pos.signal))
(p.(prox.signal))
(^prox)
(*prox)
Exit
Entry
Green
Track
Train
Signal
Junction
(Exit.prox)
(Train.pos)
(Entry.prox)
(Track.prox)
(Exit.signal)
(Entry.signal)
(Track.signal)
(p.(*prox))
(Exit.(*prox))
(Entry.(*prox))
(p.(^prox))
(Exit.(^prox))
(Entry.(^prox))
(Exit.(prox.prox))
(Train.(pos.prox))
(Entry.(prox.prox))
(Track.(prox.prox))
(Exit.(prox.signal))
(Train.(pos.signal))
(Entry.(prox.signal))
(Track.(prox.signal))
(Exit&p)
(Exit+p)
(Exit-p)
(p-Exit)
(Entry&p)
(Entry+p)
(Entry-p)
(Track-p)
(Train-t)
(p-Entry)
(Entry&Exit)
(Entry+Exit)
(Entry-Exit)
(Exit-Entry)
(Track-Exit)
(none->none)
(p&(Exit-p))
(p&(p-Exit))
(Track-Entry)
(p&(Entry-p))
(p&(Track-p))
(p&(p-Entry))
(t&(Train-t))
(Signal-Green)
(Exit&(Exit-p))
(Exit&(p-Exit))
((Entry+Exit)-p)
((Entry+p)-Exit)
((Entry-Exit)-p)
((Entry-p)-Exit)
((Exit+p)-Entry)
((Exit-Entry)-p)
((Exit-p)-Entry)
((Track-Exit)-p)
((Track-p)-Exit)
((p-Entry)-Exit)
((p-Exit)-Entry)
(Entry&(Exit&p))
(Entry&(Exit+p))
(Entry&(Exit-p))
(Entry&(p-Exit))
(Entry+(Exit&p))
(Entry+(Exit+p))
(Entry+(Exit-p))
(Entry+(p-Exit))
(Entry-(Exit&p))
(Entry-(Exit-p))
(Entry-(p-Exit))
(Exit&(Entry&p))
(Exit&(Entry+p))
(Exit&(Entry-p))
(Exit&(Track-p))
(Exit&(p-Entry))
(Exit+(Entry&p))
(Exit+(Entry+p))
(Exit+(Entry-p))
(Exit+(Track-p))
(Exit+(p-Entry))
(Exit-(Entry&p))
(Exit-(Entry-p))
(Exit-(Track-p))
(Exit-(p-Entry))
(Track-(Exit&p))
(Track-(Exit-p))
(Track-(p-Exit))
(p&(Entry&Exit))
(p&(Entry+Exit))
(p&(Entry-Exit))
(p&(Exit-Entry))
(p&(Track-Exit))
(p+(Entry&Exit))
(p+(Entry+Exit))
(p+(Entry-Exit))
(p+(Exit-Entry))
(p+(Track-Exit))
(p-(Entry&Exit))
(p-(Entry-Exit))
(p-(Exit-Entry))
(p-(Track-Exit))
((Track-Entry)-p)
((Track-p)-Entry)
(Entry&(Entry-p))
(Entry&(Track-p))
(Entry&(p-Entry))
(Entry+(Track-p))
(Entry-(Track-p))
(Track-(Entry&p))
(Track-(Entry-p))
(Track-(p-Entry))
(p&(Track-Entry))
(p+(Track-Entry))
(p-(Track-Entry))
(none->none->none)
(Exit&(Entry-Exit))
(Exit&(Exit-Entry))
(Exit&(Track-Exit))
((Track-Entry)-Exit)
((Track-Exit)-Entry)
(Entry&(Entry-Exit))
(Entry&(Exit-Entry))
(Entry&(Track-Exit))
(Entry+(Track-Exit))
(Entry-(Track-Exit))
(Exit&(Track-Entry))
(Exit+(Track-Entry))
(Exit-(Track-Entry))
(Track-(Entry&Exit))
(Track-(Entry-Exit))
(Track-(Exit-Entry))
(Entry&(Track-Entry))
(Green&(Signal-Green))
(pos.Exit)
(pos.univ)
(univ.pos)
((pos.p)-t)
((t.pos)-p)
(p&(t.pos))
(p+(t.pos))
(p-(t.pos))
(pos.Entry)
(pos.Track)
(prox.Exit)
(prox.univ)
(t&(pos.p))
(t+(pos.p))
(t-(pos.p))
(univ.prox)
((p.prox)-p)
((prox.p)-p)
(p&(p.prox))
(p&(prox.p))
(p+(p.prox))
(p+(prox.p))
(p-(p.prox))
(p-(prox.p))
(prox.Entry)
(prox.Track)
(signal.univ)
(univ.signal)
((pos.Exit)-t)
((pos.univ)-t)
((t.pos)-Exit)
((univ.pos)-p)
(Exit&(t.pos))
(Exit+(t.pos))
(Exit-(t.pos))
(p&(univ.pos))
(p+(univ.pos))
(p-(univ.pos))
(pos.(Exit&p))
(pos.(Exit+p))
(pos.(Exit-p))
(pos.(p-Exit))
(signal.Green)
(t&(pos.Exit))
(t&(pos.univ))
(t+(pos.Exit))
(t+(pos.univ))
(t-(pos.Exit))
(t-(pos.univ))
((Exit&p).prox)
((Exit+p).prox)
((Exit-p).prox)
((Exit.prox)-p)
((Train-t).pos)
((Train.pos)-p)
((p-Exit).prox)
((p.prox)-Exit)
((pos.Entry)-t)
((pos.Track)-t)
((prox.Exit)-p)
((prox.p)-Exit)
((prox.univ)-p)
((t.pos)-Entry)
((univ.prox)-p)
(Entry&(t.pos))
(Entry+(t.pos))
(Entry-(t.pos))
(Exit&(p.prox))
(Exit&(prox.p))
(Exit+(p.prox))
(Exit+(prox.p))
(Exit-(p.prox))
(Exit-(prox.p))
(Track-(t.pos))
(Train-(pos.p))
(p&(Exit.prox))
(p&(Train.pos))
(p&(prox.Exit))
(p&(prox.univ))
(p&(univ.prox))
(p+(Exit.prox))
(p+(Train.pos))
(p+(prox.Exit))
(p+(prox.univ))
(p+(univ.prox))
(p-(Exit.prox))
(p-(Train.pos))
(p-(prox.Exit))
(p-(prox.univ))
(p-(univ.prox))
(pos.(Entry&p))
(pos.(Entry+p))
(pos.(Entry-p))
(pos.(Track-p))
(pos.(p-Entry))
(prox.(Exit&p))
(prox.(Exit+p))
(prox.(Exit-p))
(prox.(p-Exit))
(signal.Signal)
(t&(pos.Entry))
(t&(pos.Track))
(t+(pos.Entry))
(t+(pos.Track))
(t-(pos.Entry))
(t-(pos.Track))
((Entry&p).prox)
((Entry+p).prox)
((Entry-p).prox)
((Entry.prox)-p)
((Track-p).prox)
((Track.prox)-p)
((p-Entry).prox)
((p.prox)-Entry)
((pos.prox)-pos)
((prox.Entry)-p)
((prox.Track)-p)
((prox.p)-Entry)
(Entry&(p.prox))
(Entry&(prox.p))
(Entry+(p.prox))
(Entry+(prox.p))
(Entry-(p.prox))
(Entry-(prox.p))
(Track-(p.prox))
(Track-(prox.p))
(p&(Entry.prox))
(p&(Track.prox))
(p&(prox.Entry))
(p&(prox.Track))
(p+(Entry.prox))
(p+(Track.prox))
(p+(prox.Entry))
(p+(prox.Track))
(p-(Entry.prox))
(p-(Track.prox))
(p-(prox.Entry))
(p-(prox.Track))
(pos&(pos.prox))
(pos+(pos.prox))
(pos-(pos.prox))
(prox.(Entry&p))
(prox.(Entry+p))
(prox.(Entry-p))
(prox.(Track-p))
(prox.(p-Entry))
((Exit&p).signal)
((Exit+p).signal)
((Exit-p).signal)
((p-Exit).signal)
((signal.univ)-p)
((univ.pos)-Exit)
(Exit&(univ.pos))
(Exit+(univ.pos))
(Exit-(univ.pos))
(p&(signal.univ))
(p+(signal.univ))
(p-(signal.univ))
((Entry&p).signal)
((Entry+p).signal)
((Entry-p).signal)
((Exit.prox)-Exit)
((Track-p).signal)
((Train.pos)-Exit)
((p-Entry).signal)
((p.signal)-Green)
((prox.Exit)-Exit)
((prox.prox)-prox)
((prox.univ)-Exit)
((signal.Green)-p)
((univ.pos)-Entry)
((univ.prox)-Exit)
(Entry&(univ.pos))
(Entry+(univ.pos))
(Entry-(univ.pos))
(Exit&(Exit.prox))
(Exit&(Train.pos))
(Exit&(prox.Exit))
(Exit&(prox.univ))
(Exit&(univ.prox))
(Exit+(Exit.prox))
(Exit+(Train.pos))
(Exit+(prox.Exit))
(Exit+(prox.univ))
(Exit+(univ.prox))
(Exit-(Exit.prox))
(Exit-(Train.pos))
(Exit-(prox.Exit))
(Exit-(prox.univ))
(Exit-(univ.prox))
(Green&(p.signal))
(Green+(p.signal))
(Green-(p.signal))
(Track-(univ.pos))
(Train-(pos.Exit))
(Train-(pos.univ))
(p&(signal.Green))
(p+(signal.Green))
(p-(signal.Green))
(pos.(Entry&Exit))
(pos.(Entry+Exit))
(pos.(Entry-Exit))
(pos.(Exit-Entry))
(pos.(Track-Exit))
(prox&(prox.prox))
(prox+(prox.prox))
(prox-(prox.prox))
((Entry&Exit).prox)
((Entry+Exit).prox)
((Entry-Exit).prox)
((Entry.prox)-Exit)
((Exit-Entry).prox)
((Exit.prox)-Entry)
((Track-Exit).prox)
((Track.prox)-Exit)
((Train.pos)-Entry)
((prox.Entry)-Exit)
((prox.Exit)-Entry)
((prox.Track)-Exit)
((prox.univ)-Entry)
((signal.Signal)-p)
((univ.prox)-Entry)
(Entry&(Exit.prox))
(Entry&(Train.pos))
(Entry&(prox.Exit))
(Entry&(prox.univ))
(Entry&(univ.prox))
(Entry+(Exit.prox))
(Entry+(Train.pos))
(Entry+(prox.Exit))
(Entry+(prox.univ))
(Entry+(univ.prox))
(Entry-(Exit.prox))
(Entry-(Train.pos))
(Entry-(prox.Exit))
(Entry-(prox.univ))
(Entry-(univ.prox))
(Exit&(Entry.prox))
(Exit&(Track.prox))
(Exit&(prox.Entry))
(Exit&(prox.Track))
(Exit+(Entry.prox))
(Exit+(Track.prox))
(Exit+(prox.Entry))
(Exit+(prox.Track))
(Exit-(Entry.prox))
(Exit-(Track.prox))
(Exit-(prox.Entry))
(Exit-(prox.Track))
(Signal-(p.signal))
(Track-(Exit.prox))
(Track-(Train.pos))
(Track-(prox.Exit))
(Track-(prox.univ))
(Track-(univ.prox))
(Train-(pos.Entry))
(Train-(pos.Track))
(p&(signal.Signal))
(p+(signal.Signal))
(p-(signal.Signal))
(pos.(Track-Entry))
(prox.(Entry&Exit))
(prox.(Entry+Exit))
(prox.(Entry-Exit))
(prox.(Exit-Entry))
(prox.(Track-Exit))
((Entry.prox)-Entry)
((Track-Entry).prox)
((Track.prox)-Entry)
((prox.Entry)-Entry)
((prox.Track)-Entry)
((signal.univ)-Exit)
(Entry&(Entry.prox))
(Entry&(Track.prox))
(Entry&(prox.Entry))
(Entry&(prox.Track))
(Entry+(Entry.prox))
(Entry+(Track.prox))
(Entry+(prox.Entry))
(Entry+(prox.Track))
(Entry-(Entry.prox))
(Entry-(Track.prox))
(Entry-(prox.Entry))
(Entry-(prox.Track))
(Exit&(signal.univ))
(Exit+(signal.univ))
(Exit-(signal.univ))
(Track-(Entry.prox))
(Track-(Track.prox))
(Track-(prox.Entry))
(Track-(prox.Track))
(prox.(Track-Entry))
((Entry&Exit).signal)
((Entry+Exit).signal)
((Entry-Exit).signal)
((Exit-Entry).signal)
((Exit.signal)-Green)
((Track-Exit).signal)
((signal.Green)-Exit)
((signal.univ)-Entry)
((univ.signal)-Green)
(Entry&(signal.univ))
(Entry+(signal.univ))
(Entry-(signal.univ))
(Exit&(signal.Green))
(Exit+(signal.Green))
(Exit-(signal.Green))
(Green&(Exit.signal))
(Green&(univ.signal))
(Green+(Exit.signal))
(Green+(univ.signal))
(Green-(Exit.signal))
(Green-(univ.signal))
(Track-(signal.univ))
((Entry.signal)-Green)
((Track-Entry).signal)
((Track.signal)-Green)
((prox.signal)-signal)
((signal.Green)-Entry)
((signal.Signal)-Exit)
(Entry&(signal.Green))
(Entry+(signal.Green))
(Entry-(signal.Green))
(Exit&(signal.Signal))
(Exit+(signal.Signal))
(Exit-(signal.Signal))
(Green&(Entry.signal))
(Green&(Track.signal))
(Green+(Entry.signal))
(Green+(Track.signal))
(Green-(Entry.signal))
(Green-(Track.signal))
(Signal-(Exit.signal))
(Signal-(univ.signal))
(Track-(signal.Green))
(signal&(prox.signal))
(signal+(prox.signal))
(signal-(prox.signal))
((signal.Signal)-Entry)
(Entry&(signal.Signal))
(Entry+(signal.Signal))
(Entry-(signal.Signal))
(Signal-(Entry.signal))
(Signal-(Track.signal))
(Track-(signal.Signal))
(signal.(Signal-Green))
((pos.p).pos)
(pos.(t.pos))
(pos.(p.prox))
(pos.(prox.p))
(prox.(t.pos))
((prox.p).prox)
(prox.(p.prox))
(prox.(prox.p))
((pos.Exit).pos)
((pos.univ).pos)
(pos.(univ.pos))
((pos.Entry).pos)
((pos.Track).pos)
((prox.p).signal)
(pos.(Exit.prox))
(pos.(Train.pos))
(pos.(prox.Exit))
(pos.(prox.prox))
(pos.(prox.univ))
(pos.(univ.prox))
(prox.(univ.pos))
(univ.(pos.prox))
((prox.Exit).prox)
((prox.univ).prox)
(pos.(Entry.prox))
(pos.(Track.prox))
(pos.(prox.Entry))
(pos.(prox.Track))
(prox.(Exit.prox))
(prox.(Train.pos))
(prox.(prox.Exit))
(prox.(prox.prox))
(prox.(prox.univ))
(prox.(univ.prox))
(univ.(prox.prox))
((prox.Entry).prox)
((prox.Track).prox)
(pos.(prox.signal))
(pos.(signal.univ))
(prox.(Entry.prox))
(prox.(Track.prox))
(prox.(prox.Entry))
(prox.(prox.Track))
(signal.(p.signal))
(univ.(pos.signal))
((prox.Exit).signal)
((prox.univ).signal)
((signal.univ).prox)
(pos.(signal.Green))
(prox.(prox.signal))
(prox.(signal.univ))
(univ.(prox.signal))
((prox.Entry).signal)
((prox.Track).signal)
((signal.Green).prox)
(pos.(signal.Signal))
(prox.(signal.Green))
((signal.Signal).prox)
((signal.univ).signal)
(prox.(signal.Signal))
(signal.(Exit.signal))
(signal.(univ.signal))
((signal.Green).signal)
(signal.(Entry.signal))
(signal.(Track.signal))
((signal.Signal).signal)
((~prox)-prox)
(prox&(~prox))
(prox+(~prox))
(prox-(~prox))
((^prox)-prox)
((*prox)-prox)
((~pos).t)
((~prox).p)
((~pos).pos)
(pos.(~pos))
((~pos).univ)
((~signal).p)
(pos.(~prox))
(prox.(~pos))
(~(pos.prox))
((~pos).Train)
((~prox).Exit)
((~prox).prox)
((~prox).univ)
(prox.(~prox))
(~(prox.prox))
((~prox).Entry)
((~prox).Track)
(~(pos.signal))
((~prox).signal)
((~signal).Exit)
((~signal).prox)
((~signal).univ)
(~(prox.signal))
((~signal).Entry)
((~signal).Track)
((~signal).signal)
(signal.(~signal))
((^prox).p)
(pos.(^prox))
((^prox).Exit)
(^(prox.prox))
(prox.(^prox))
((^prox).Entry)
((^prox).signal)
((*prox).p)
(pos.(*prox))
((*prox).Exit)
(*(prox.prox))
((*prox).Entry)
((*prox).signal)
(^(~prox))
(*(~prox))
Int
none
univ
String