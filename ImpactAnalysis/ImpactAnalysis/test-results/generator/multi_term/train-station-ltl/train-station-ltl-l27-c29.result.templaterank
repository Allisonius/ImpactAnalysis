s
Exit
Entry
Green
Track
Train
Signal
Junction
pos
prox
(~pos)
signal
(~prox)
(~signal)
(^prox)
(*prox)
(Exit.prox)
(Train.pos)
(Entry.prox)
(Track.prox)
(Exit.signal)
(Entry.signal)
(Track.signal)
(Exit.(*prox))
(Entry.(*prox))
(Exit.(^prox))
(Entry.(^prox))
(Exit.(prox.prox))
(Train.(pos.prox))
(Entry.(prox.prox))
(Track.(prox.prox))
(Exit.(prox.signal))
(Train.(pos.signal))
(Entry.(prox.signal))
(Track.(prox.signal))
(Green&s)
(Green+s)
(Green-s)
(s-Green)
(Signal-s)
(Entry&Exit)
(Entry+Exit)
(Entry-Exit)
(Exit-Entry)
(Track-Exit)
(none->none)
(Track-Entry)
(s&(Green-s))
(s&(s-Green))
(Signal-Green)
(s&(Signal-s))
(Green&(Green-s))
(Green&(s-Green))
((Signal-Green)-s)
((Signal-s)-Green)
(Green&(Signal-s))
(Green+(Signal-s))
(Green-(Signal-s))
(Signal-(Green&s))
(Signal-(Green-s))
(Signal-(s-Green))
(none->none->none)
(s&(Signal-Green))
(s+(Signal-Green))
(s-(Signal-Green))
(Exit&(Entry-Exit))
(Exit&(Exit-Entry))
(Exit&(Track-Exit))
((Track-Entry)-Exit)
((Track-Exit)-Entry)
(Entry&(Entry-Exit))
(Entry&(Exit-Entry))
(Entry&(Track-Exit))
(Entry+(Track-Exit))
(Entry-(Track-Exit))
(Exit&(Track-Entry))
(Exit+(Track-Entry))
(Exit-(Track-Entry))
(Track-(Entry&Exit))
(Track-(Entry-Exit))
(Track-(Exit-Entry))
(Entry&(Track-Entry))
(Green&(Signal-Green))
(pos.Exit)
(pos.prox)
(pos.univ)
(signal.s)
(univ.pos)
(pos.Entry)
(pos.Track)
(prox.Exit)
(prox.prox)
(prox.univ)
(univ.prox)
(pos.signal)
(prox.Entry)
(prox.Track)
(prox.signal)
(signal.univ)
(univ.signal)
(signal.Green)
(signal.Signal)
((pos.prox)-pos)
(pos&(pos.prox))
(pos+(pos.prox))
(pos-(pos.prox))
((Exit.signal)-s)
((signal.s)-Exit)
((univ.pos)-Exit)
((univ.signal)-s)
(Exit&(signal.s))
(Exit&(univ.pos))
(Exit+(signal.s))
(Exit+(univ.pos))
(Exit-(signal.s))
(Exit-(univ.pos))
(s&(Exit.signal))
(s&(univ.signal))
(s+(Exit.signal))
(s+(univ.signal))
(s-(Exit.signal))
(s-(univ.signal))
((Entry.signal)-s)
((Exit.prox)-Exit)
((Track.signal)-s)
((Train.pos)-Exit)
((prox.Exit)-Exit)
((prox.prox)-prox)
((prox.univ)-Exit)
((signal.s)-Entry)
((univ.pos)-Entry)
((univ.prox)-Exit)
(Entry&(signal.s))
(Entry&(univ.pos))
(Entry+(signal.s))
(Entry+(univ.pos))
(Entry-(signal.s))
(Entry-(univ.pos))
(Exit&(Exit.prox))
(Exit&(Train.pos))
(Exit&(prox.Exit))
(Exit&(prox.univ))
(Exit&(univ.prox))
(Exit+(Exit.prox))
(Exit+(Train.pos))
(Exit+(prox.Exit))
(Exit+(prox.univ))
(Exit+(univ.prox))
(Exit-(Exit.prox))
(Exit-(Train.pos))
(Exit-(prox.Exit))
(Exit-(prox.univ))
(Exit-(univ.prox))
(Track-(signal.s))
(Track-(univ.pos))
(Train-(pos.Exit))
(Train-(pos.univ))
(pos.(Entry&Exit))
(pos.(Entry+Exit))
(pos.(Entry-Exit))
(pos.(Exit-Entry))
(pos.(Track-Exit))
(prox&(prox.prox))
(prox+(prox.prox))
(prox-(prox.prox))
(s&(Entry.signal))
(s&(Track.signal))
(s+(Entry.signal))
(s+(Track.signal))
(s-(Entry.signal))
(s-(Track.signal))
(signal.(Green&s))
(signal.(Green+s))
(signal.(Green-s))
(signal.(s-Green))
((Entry&Exit).prox)
((Entry+Exit).prox)
((Entry-Exit).prox)
((Entry.prox)-Exit)
((Exit-Entry).prox)
((Exit.prox)-Entry)
((Track-Exit).prox)
((Track.prox)-Exit)
((Train.pos)-Entry)
((prox.Entry)-Exit)
((prox.Exit)-Entry)
((prox.Track)-Exit)
((prox.univ)-Entry)
((univ.prox)-Entry)
(Entry&(Exit.prox))
(Entry&(Train.pos))
(Entry&(prox.Exit))
(Entry&(prox.univ))
(Entry&(univ.prox))
(Entry+(Exit.prox))
(Entry+(Train.pos))
(Entry+(prox.Exit))
(Entry+(prox.univ))
(Entry+(univ.prox))
(Entry-(Exit.prox))
(Entry-(Train.pos))
(Entry-(prox.Exit))
(Entry-(prox.univ))
(Entry-(univ.prox))
(Exit&(Entry.prox))
(Exit&(Track.prox))
(Exit&(prox.Entry))
(Exit&(prox.Track))
(Exit+(Entry.prox))
(Exit+(Track.prox))
(Exit+(prox.Entry))
(Exit+(prox.Track))
(Exit-(Entry.prox))
(Exit-(Track.prox))
(Exit-(prox.Entry))
(Exit-(prox.Track))
(Track-(Exit.prox))
(Track-(Train.pos))
(Track-(prox.Exit))
(Track-(prox.univ))
(Track-(univ.prox))
(Train-(pos.Entry))
(Train-(pos.Track))
(pos.(Track-Entry))
(prox.(Entry&Exit))
(prox.(Entry+Exit))
(prox.(Entry-Exit))
(prox.(Exit-Entry))
(prox.(Track-Exit))
(signal.(Signal-s))
((Entry.prox)-Entry)
((Track-Entry).prox)
((Track.prox)-Entry)
((prox.Entry)-Entry)
((prox.Track)-Entry)
((signal.univ)-Exit)
(Entry&(Entry.prox))
(Entry&(Track.prox))
(Entry&(prox.Entry))
(Entry&(prox.Track))
(Entry+(Entry.prox))
(Entry+(Track.prox))
(Entry+(prox.Entry))
(Entry+(prox.Track))
(Entry-(Entry.prox))
(Entry-(Track.prox))
(Entry-(prox.Entry))
(Entry-(prox.Track))
(Exit&(signal.univ))
(Exit+(signal.univ))
(Exit-(signal.univ))
(Track-(Entry.prox))
(Track-(Track.prox))
(Track-(prox.Entry))
(Track-(prox.Track))
(prox.(Track-Entry))
((Entry&Exit).signal)
((Entry+Exit).signal)
((Entry-Exit).signal)
((Exit-Entry).signal)
((Exit.signal)-Green)
((Track-Exit).signal)
((signal.Green)-Exit)
((signal.univ)-Entry)
((univ.signal)-Green)
(Entry&(signal.univ))
(Entry+(signal.univ))
(Entry-(signal.univ))
(Exit&(signal.Green))
(Exit+(signal.Green))
(Exit-(signal.Green))
(Green&(Exit.signal))
(Green&(univ.signal))
(Green+(Exit.signal))
(Green+(univ.signal))
(Green-(Exit.signal))
(Green-(univ.signal))
(Track-(signal.univ))
((Entry.signal)-Green)
((Track-Entry).signal)
((Track.signal)-Green)
((prox.signal)-signal)
((signal.Green)-Entry)
((signal.Signal)-Exit)
(Entry&(signal.Green))
(Entry+(signal.Green))
(Entry-(signal.Green))
(Exit&(signal.Signal))
(Exit+(signal.Signal))
(Exit-(signal.Signal))
(Green&(Entry.signal))
(Green&(Track.signal))
(Green+(Entry.signal))
(Green+(Track.signal))
(Green-(Entry.signal))
(Green-(Track.signal))
(Signal-(Exit.signal))
(Signal-(univ.signal))
(Track-(signal.Green))
(signal&(prox.signal))
(signal+(prox.signal))
(signal-(prox.signal))
((signal.Signal)-Entry)
(Entry&(signal.Signal))
(Entry+(signal.Signal))
(Entry-(signal.Signal))
(Signal-(Entry.signal))
(Signal-(Track.signal))
(Track-(signal.Signal))
(signal.(Signal-Green))
((pos.Exit).pos)
((pos.univ).pos)
(pos.(signal.s))
(pos.(univ.pos))
((pos.Entry).pos)
((pos.Track).pos)
((signal.s).prox)
(pos.(Exit.prox))
(pos.(Train.pos))
(pos.(prox.Exit))
(pos.(prox.prox))
(pos.(prox.univ))
(pos.(univ.prox))
(prox.(signal.s))
(prox.(univ.pos))
(univ.(pos.prox))
((prox.Exit).prox)
((prox.univ).prox)
(pos.(Entry.prox))
(pos.(Track.prox))
(pos.(prox.Entry))
(pos.(prox.Track))
(prox.(Exit.prox))
(prox.(Train.pos))
(prox.(prox.Exit))
(prox.(prox.prox))
(prox.(prox.univ))
(prox.(univ.prox))
(univ.(prox.prox))
((prox.Entry).prox)
((prox.Track).prox)
((signal.s).signal)
(pos.(prox.signal))
(pos.(signal.univ))
(prox.(Entry.prox))
(prox.(Track.prox))
(prox.(prox.Entry))
(prox.(prox.Track))
(univ.(pos.signal))
((prox.Exit).signal)
((prox.univ).signal)
((signal.univ).prox)
(pos.(signal.Green))
(prox.(prox.signal))
(prox.(signal.univ))
(univ.(prox.signal))
((prox.Entry).signal)
((prox.Track).signal)
((signal.Green).prox)
(pos.(signal.Signal))
(prox.(signal.Green))
((signal.Signal).prox)
((signal.univ).signal)
(prox.(signal.Signal))
(signal.(Exit.signal))
(signal.(univ.signal))
((signal.Green).signal)
(signal.(Entry.signal))
(signal.(Track.signal))
((signal.Signal).signal)
((~prox)-prox)
(prox&(~prox))
(prox+(~prox))
(prox-(~prox))
((^prox)-prox)
((*prox)-prox)
((~pos).pos)
(pos.(~pos))
((~pos).univ)
(pos.(~prox))
(prox.(~pos))
(~(pos.prox))
((~pos).Train)
((~prox).Exit)
((~prox).prox)
((~prox).univ)
(prox.(~prox))
(~(prox.prox))
((~prox).Entry)
((~prox).Track)
(~(pos.signal))
((~prox).signal)
((~signal).Exit)
((~signal).prox)
((~signal).univ)
(~(prox.signal))
((~signal).Entry)
((~signal).Track)
((~signal).signal)
(signal.(~signal))
(pos.(^prox))
((^prox).Exit)
(^(prox.prox))
(prox.(^prox))
((^prox).Entry)
((^prox).signal)
(pos.(*prox))
((*prox).Exit)
(*(prox.prox))
((*prox).Entry)
((*prox).signal)
(^(~prox))
(*(~prox))
Int
none
univ
String