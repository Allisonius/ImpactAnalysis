end
Human
Robot
begin
Worker
Product
Material
Component
Dangerous
Workstation
(c.workstation)
c
(end.succ)
(begin.succ)
(end.workers)
(Product.parts)
(begin.workers)
(Dangerous.parts)
(Workstation.succ)
(Workstation.workers)
(Component.workstation)
succ
parts
workers
workstation
(~succ)
(~parts)
(~workers)
(end.(*succ))
(~workstation)
(begin.(*succ))
(Dangerous.(*parts))
(*succ)
(^succ)
(*parts)
(^parts)
(end.(^succ))
(begin.(^succ))
(Dangerous.(^parts))
(end.(succ.succ))
(begin.(succ.succ))
(end.(succ.workers))
(begin.(succ.workers))
(c.(workstation.succ))
(Product.(parts.parts))
(Dangerous.(parts.parts))
(Workstation.(succ.succ))
(c.(workstation.workers))
(Workstation.(succ.workers))
(Component.(workstation.succ))
(Component.(workstation.workers))
(begin&end)
(begin+end)
(begin-end)
(end-begin)
(none->none)
(Component&c)
(Component+c)
(Component-c)
(c-Component)
(Workstation-end)
(c&(Component-c))
(c&(c-Component))
(end&(begin-end))
(end&(end-begin))
(none->none->none)
(Product-Dangerous)
(Workstation-begin)
(begin&(begin-end))
(begin&(end-begin))
(end&(Workstation-end))
((Workstation-begin)-end)
((Workstation-end)-begin)
(Component&(Component-c))
(Component&(c-Component))
(Workstation-(begin&end))
(Workstation-(begin-end))
(Workstation-(end-begin))
(begin&(Workstation-end))
(begin+(Workstation-end))
(begin-(Workstation-end))
(end&(Workstation-begin))
(end+(Workstation-begin))
(end-(Workstation-begin))
(begin&(Workstation-begin))
(Dangerous&(Product-Dangerous))
(succ.end)
(succ.succ)
(succ.univ)
(univ.succ)
(parts.univ)
(succ.begin)
(univ.parts)
(parts.parts)
(succ.workers)
(univ.workers)
(workers.univ)
(parts.Product)
((end.succ)-end)
((succ.end)-end)
(end&(end.succ))
(end&(succ.end))
(end+(end.succ))
(end+(succ.end))
(end-(end.succ))
(end-(succ.end))
(workers.Worker)
((succ.univ)-end)
((univ.succ)-end)
(end&(succ.univ))
(end&(univ.succ))
(end+(succ.univ))
(end+(univ.succ))
(end-(succ.univ))
(end-(univ.succ))
(parts.Dangerous)
(workstation.end)
((begin&end).succ)
((begin+end).succ)
((begin-end).succ)
((begin.succ)-end)
((end-begin).succ)
((end.succ)-begin)
((succ.begin)-end)
((succ.end)-begin)
((succ.succ)-succ)
(begin&(end.succ))
(begin&(succ.end))
(begin+(end.succ))
(begin+(succ.end))
(begin-(end.succ))
(begin-(succ.end))
(end&(begin.succ))
(end&(succ.begin))
(end+(begin.succ))
(end+(succ.begin))
(end-(begin.succ))
(end-(succ.begin))
(succ&(succ.succ))
(succ+(succ.succ))
(succ-(succ.succ))
(succ.(begin&end))
(succ.(begin+end))
(succ.(begin-end))
(succ.(end-begin))
(succ.Workstation)
(univ.workstation)
(workstation.succ)
(workstation.univ)
((succ.univ)-begin)
((univ.succ)-begin)
(begin&(succ.univ))
(begin&(univ.succ))
(begin+(succ.univ))
(begin+(univ.succ))
(begin-(succ.univ))
(begin-(univ.succ))
(workstation.begin)
((begin.succ)-begin)
((succ.begin)-begin)
((workers.univ)-end)
(begin&(begin.succ))
(begin&(succ.begin))
(begin+(begin.succ))
(begin+(succ.begin))
(begin-(begin.succ))
(begin-(succ.begin))
(end&(workers.univ))
(end+(workers.univ))
(end-(workers.univ))
((begin&end).workers)
((begin+end).workers)
((begin-end).workers)
((c.workstation)-end)
((end-begin).workers)
((parts.parts)-parts)
((workstation.end)-c)
(c&(workstation.end))
(c+(workstation.end))
(c-(workstation.end))
(end&(c.workstation))
(end+(c.workstation))
(end-(c.workstation))
(parts&(parts.parts))
(parts+(parts.parts))
(parts-(parts.parts))
(workstation.workers)
((workers.Worker)-end)
((workers.univ)-begin)
((workstation.univ)-c)
(Product-(parts.univ))
(Product-(univ.parts))
(Worker-(end.workers))
(begin&(workers.univ))
(begin+(workers.univ))
(begin-(workers.univ))
(c&(workstation.univ))
(c+(workstation.univ))
(c-(workstation.univ))
(end&(workers.Worker))
(end+(workers.Worker))
(end-(workers.Worker))
((c.workstation)-begin)
((workstation.begin)-c)
(Worker-(univ.workers))
(begin&(c.workstation))
(begin+(c.workstation))
(begin-(c.workstation))
(c&(workstation.begin))
(c+(workstation.begin))
(c-(workstation.begin))
((Workstation-end).succ)
((Workstation.succ)-end)
((parts.univ)-Dangerous)
((succ.Workstation)-end)
((succ.workers)-workers)
((univ.parts)-Dangerous)
((univ.workstation)-end)
((workers.Worker)-begin)
(Dangerous&(parts.univ))
(Dangerous&(univ.parts))
(Dangerous+(parts.univ))
(Dangerous+(univ.parts))
(Dangerous-(parts.univ))
(Dangerous-(univ.parts))
(Worker-(begin.workers))
(Workstation-(end.succ))
(Workstation-(succ.end))
(begin&(workers.Worker))
(begin+(workers.Worker))
(begin-(workers.Worker))
(end&(Workstation.succ))
(end&(succ.Workstation))
(end&(univ.workstation))
(end+(Workstation.succ))
(end+(succ.Workstation))
(end+(univ.workstation))
(end-(Workstation.succ))
(end-(succ.Workstation))
(end-(univ.workstation))
(succ.(Workstation-end))
(workers&(succ.workers))
(workers+(succ.workers))
(workers-(succ.workers))
(Product-(Product.parts))
(Product-(parts.Product))
(Workstation-(succ.univ))
(Workstation-(univ.succ))
(workstation.(begin&end))
(workstation.(begin+end))
(workstation.(begin-end))
(workstation.(end-begin))
(workstation.Workstation)
((Workstation-begin).succ)
((Workstation.succ)-begin)
((succ.Workstation)-begin)
((univ.workstation)-begin)
(Workstation-(begin.succ))
(Workstation-(succ.begin))
(begin&(Workstation.succ))
(begin&(succ.Workstation))
(begin&(univ.workstation))
(begin+(Workstation.succ))
(begin+(succ.Workstation))
(begin+(univ.workstation))
(begin-(Workstation.succ))
(begin-(succ.Workstation))
(begin-(univ.workstation))
(succ.(Workstation-begin))
((Component&c).workstation)
((Component+c).workstation)
((Component-c).workstation)
((Product-Dangerous).parts)
((Product.parts)-Dangerous)
((Workstation-end).workers)
((c-Component).workstation)
((parts.Product)-Dangerous)
(Dangerous&(Product.parts))
(Dangerous&(parts.Product))
(Dangerous+(Product.parts))
(Dangerous+(parts.Product))
(Dangerous-(Product.parts))
(Dangerous-(parts.Product))
(Product-(Dangerous.parts))
(Product-(parts.Dangerous))
(parts.(Product-Dangerous))
(Workstation-(workers.univ))
((Component.workstation)-end)
((Dangerous.parts)-Dangerous)
((Workstation-begin).workers)
((parts.Dangerous)-Dangerous)
((workstation.Workstation)-c)
((workstation.end)-Component)
(Component&(workstation.end))
(Component+(workstation.end))
(Component-(workstation.end))
(Dangerous&(Dangerous.parts))
(Dangerous&(parts.Dangerous))
(Dangerous+(Dangerous.parts))
(Dangerous+(parts.Dangerous))
(Dangerous-(Dangerous.parts))
(Dangerous-(parts.Dangerous))
(Workstation-(c.workstation))
(c&(workstation.Workstation))
(c+(workstation.Workstation))
(c-(workstation.Workstation))
(end&(Component.workstation))
(end+(Component.workstation))
(end-(Component.workstation))
((workstation.univ)-Component)
(Component&(workstation.univ))
(Component+(workstation.univ))
(Component-(workstation.univ))
(Worker-(Workstation.workers))
(Workstation-(workers.Worker))
((Component.workstation)-begin)
((workstation.begin)-Component)
(Component&(workstation.begin))
(Component+(workstation.begin))
(Component-(workstation.begin))
(begin&(Component.workstation))
(begin+(Component.workstation))
(begin-(Component.workstation))
(workstation.(Workstation-end))
((workstation.succ)-workstation)
(Workstation-(Workstation.succ))
(Workstation-(succ.Workstation))
(Workstation-(univ.workstation))
(workstation&(workstation.succ))
(workstation+(workstation.succ))
(workstation-(workstation.succ))
(workstation.(Workstation-begin))
((workstation.Workstation)-Component)
(Component&(workstation.Workstation))
(Component+(workstation.Workstation))
(Component-(workstation.Workstation))
(Workstation-(Component.workstation))
((succ.end).succ)
(succ.(end.succ))
(succ.(succ.end))
((succ.univ).succ)
(succ.(succ.succ))
(succ.(succ.univ))
(succ.(univ.succ))
(univ.(succ.succ))
((succ.begin).succ)
(succ.(begin.succ))
(succ.(succ.begin))
((parts.univ).parts)
((succ.end).workers)
(parts.(parts.univ))
(parts.(univ.parts))
(univ.(parts.parts))
((succ.univ).workers)
((workers.univ).succ)
(parts.(parts.parts))
(succ.(succ.workers))
(succ.(workers.univ))
(univ.(succ.workers))
((succ.begin).workers)
(succ.(c.workstation))
((parts.Product).parts)
((workers.Worker).succ)
(parts.(Product.parts))
(parts.(parts.Product))
(succ.(workers.Worker))
(workers.(end.workers))
((workers.univ).workers)
(workers.(univ.workers))
(workstation.(end.succ))
(workstation.(succ.end))
((parts.Dangerous).parts)
((succ.Workstation).succ)
(parts.(Dangerous.parts))
(parts.(parts.Dangerous))
(succ.(Workstation.succ))
(succ.(succ.Workstation))
(succ.(univ.workstation))
(univ.(workstation.succ))
(workers.(begin.workers))
(workstation.(succ.succ))
(workstation.(succ.univ))
(workstation.(univ.succ))
((workers.Worker).workers)
(workstation.(begin.succ))
(workstation.(succ.begin))
((succ.Workstation).workers)
(univ.(workstation.workers))
(workstation.(succ.workers))
(workstation.(workers.univ))
(workstation.(c.workstation))
(succ.(Component.workstation))
(workstation.(workers.Worker))
((workstation.end).workstation)
(workers.(Workstation.workers))
((workstation.univ).workstation)
(workstation.(Workstation.succ))
(workstation.(succ.Workstation))
(workstation.(univ.workstation))
((workstation.begin).workstation)
(workstation.(Component.workstation))
((workstation.Workstation).workstation)
((~succ)-succ)
(succ&(~succ))
(succ+(~succ))
(succ-(~succ))
((~parts)-parts)
(parts&(~parts))
(parts+(~parts))
(parts-(~parts))
((^succ)-succ)
((^parts)-parts)
((*succ)-succ)
((*parts)-parts)
((~succ).end)
((~succ).succ)
((~succ).univ)
(succ.(~succ))
(~(succ.succ))
((~parts).univ)
((~succ).begin)
((~parts).parts)
((~workers).end)
(parts.(~parts))
(~(parts.parts))
((~succ).workers)
((~workers).succ)
((~workers).univ)
(~(succ.workers))
((~parts).Product)
((~workers).begin)
((~workstation).c)
((~parts).Dangerous)
((~workers).workers)
(workers.(~workers))
((~succ).Workstation)
((~workstation).univ)
(succ.(~workstation))
(workstation.(~succ))
(~(workstation.succ))
((~workers).Workstation)
(~(workstation.workers))
((~workstation).Component)
((~workstation).workstation)
(workstation.(~workstation))
((^succ).end)
(^(succ.succ))
(succ.(^succ))
((^succ).begin)
(^(parts.parts))
(parts.(^parts))
((^succ).workers)
((^parts).Dangerous)
(workstation.(^succ))
((*succ).end)
(*(succ.succ))
((*succ).begin)
(*(parts.parts))
((*succ).workers)
((*parts).Dangerous)
(workstation.(*succ))
(^(~succ))
(^(~parts))
(*(~succ))
(*(~parts))
Int
none
univ
String