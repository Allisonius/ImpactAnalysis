Grade
Course
Person
Project
Student
Professor
Next
First
ordering/Ord
(Person.teaches)
(Course.projects)
(Person.enrolled)
(Person.projects)
(Student.teaches)
(Student.enrolled)
(Student.projects)
(Professor.teaches)
(Professor.enrolled)
(Professor.projects)
teaches
enrolled
projects
(~teaches)
(~enrolled)
(~projects)
(Person.(teaches.projects))
(Person.(enrolled.projects))
(Student.(teaches.projects))
(Student.(enrolled.projects))
(Professor.(teaches.projects))
(Professor.(enrolled.projects))
(none->none)
(Person-Student)
(Person-Professor)
(enrolled-teaches)
(none->none->none)
(teaches&enrolled)
(teaches+enrolled)
(teaches-enrolled)
(Professor&Student)
(Professor+Student)
(Professor-Student)
(Student-Professor)
(Student&(Person-Student))
((Person-Professor)-Student)
((Person-Student)-Professor)
(Person-(Professor&Student))
(Person-(Professor-Student))
(Person-(Student-Professor))
(Professor&(Person-Student))
(Professor+(Person-Student))
(Professor-(Person-Student))
(Student&(Person-Professor))
(Student+(Person-Professor))
(Student-(Person-Professor))
(teaches&(enrolled-teaches))
(teaches&(teaches-enrolled))
(Student&(Professor-Student))
(Student&(Student-Professor))
(enrolled&(enrolled-teaches))
(enrolled&(teaches-enrolled))
(Professor&(Person-Professor))
(Professor&(Professor-Student))
(Professor&(Student-Professor))
(Next.univ)
(univ.Next)
(First.univ)
(Next.Grade)
(univ.First)
(First.Grade)
(teaches.univ)
(univ.teaches)
(enrolled.univ)
(projects.univ)
(univ.enrolled)
(univ.projects)
(teaches.Course)
(enrolled.Course)
(projects.Project)
(teaches.projects)
((Next.univ)-First)
(First&(Next.univ))
(First+(Next.univ))
(First-(Next.univ))
(enrolled.projects)
(ordering/Ord.Next)
((Next.Grade)-First)
(First&(Next.Grade))
(First+(Next.Grade))
(First-(Next.Grade))
(Grade-(univ.First))
(ordering/Ord.First)
(Course-(univ.teaches))
(Person-(teaches.univ))
((teaches.univ)-Student)
(Course-(projects.univ))
(Course-(univ.enrolled))
(Person-(enrolled.univ))
(Person-(projects.univ))
(Student&(teaches.univ))
(Student+(teaches.univ))
(Student-(teaches.univ))
((enrolled-teaches).univ)
((enrolled.univ)-Student)
((projects.univ)-Student)
((teaches&enrolled).univ)
((teaches+enrolled).univ)
((teaches-enrolled).univ)
(Course-(Person.teaches))
(Person-(teaches.Course))
(Project-(univ.projects))
(Student&(enrolled.univ))
(Student&(projects.univ))
(Student+(enrolled.univ))
(Student+(projects.univ))
(Student-(enrolled.univ))
(Student-(projects.univ))
(univ.(enrolled-teaches))
(univ.(teaches&enrolled))
(univ.(teaches+enrolled))
(univ.(teaches-enrolled))
((Person-Student).teaches)
((teaches.Course)-Student)
((teaches.univ)-Professor)
(Course-(Person.enrolled))
(Course-(Student.teaches))
(Person-(enrolled.Course))
(Professor&(teaches.univ))
(Professor+(teaches.univ))
(Professor-(teaches.univ))
(Student&(teaches.Course))
(Student+(teaches.Course))
(Student-(teaches.Course))
((Person-Student).enrolled)
((Person-Student).projects)
((enrolled-teaches).Course)
((enrolled.Course)-Student)
((enrolled.univ)-Professor)
((projects.univ)-Professor)
((teaches&enrolled).Course)
((teaches+enrolled).Course)
((teaches-enrolled).Course)
(Course-(Student.enrolled))
(Course-(projects.Project))
(Person-(projects.Project))
(Person.(enrolled-teaches))
(Person.(teaches&enrolled))
(Person.(teaches+enrolled))
(Person.(teaches-enrolled))
(Professor&(enrolled.univ))
(Professor&(projects.univ))
(Professor+(enrolled.univ))
(Professor+(projects.univ))
(Professor-(enrolled.univ))
(Professor-(projects.univ))
(Project-(Course.projects))
(Project-(Person.projects))
(Student&(enrolled.Course))
(Student+(enrolled.Course))
(Student-(enrolled.Course))
(ordering/Ord-(First.univ))
((Person-Professor).teaches)
((projects.Project)-Student)
((teaches.Course)-Professor)
(Course-(Professor.teaches))
(Grade-(ordering/Ord.First))
(Professor&(teaches.Course))
(Professor+(teaches.Course))
(Professor-(teaches.Course))
(Project-(Student.projects))
(Student&(projects.Project))
(Student+(projects.Project))
(Student-(projects.Project))
(Student.(enrolled-teaches))
(Student.(teaches&enrolled))
(Student.(teaches+enrolled))
(Student.(teaches-enrolled))
(ordering/Ord-(First.Grade))
((Person-Professor).enrolled)
((Person-Professor).projects)
((Professor&Student).teaches)
((Professor+Student).teaches)
((Professor-Student).teaches)
((Student-Professor).teaches)
((enrolled-teaches).projects)
((enrolled.Course)-Professor)
((teaches&enrolled).projects)
((teaches+enrolled).projects)
((teaches-enrolled).projects)
((teaches.projects)-projects)
(Course-(Professor.enrolled))
(Professor&(enrolled.Course))
(Professor+(enrolled.Course))
(Professor-(enrolled.Course))
(projects&(teaches.projects))
(projects+(teaches.projects))
(projects-(teaches.projects))
((Professor&Student).enrolled)
((Professor&Student).projects)
((Professor+Student).enrolled)
((Professor+Student).projects)
((Professor-Student).enrolled)
((Professor-Student).projects)
((Student-Professor).enrolled)
((Student-Professor).projects)
((enrolled.projects)-projects)
((projects.Project)-Professor)
(Professor&(projects.Project))
(Professor+(projects.Project))
(Professor-(projects.Project))
(Professor.(enrolled-teaches))
(Professor.(teaches&enrolled))
(Professor.(teaches+enrolled))
(Professor.(teaches-enrolled))
(Project-(Professor.projects))
(projects&(enrolled.projects))
(projects+(enrolled.projects))
(projects-(enrolled.projects))
((Next.univ).univ)
(Next.(univ.Next))
(univ.(Next.univ))
(univ.(univ.Next))
((First.univ).Next)
((Next.Grade).univ)
((Next.univ).Grade)
(First.(univ.Next))
(Grade.(univ.Next))
(Next.(univ.First))
(univ.(Next.Grade))
((First.Grade).Next)
((First.univ).First)
((Next.Grade).Grade)
(First.(univ.First))
((First.Grade).First)
((teaches.univ).teaches)
(teaches.(univ.teaches))
((enrolled.univ).teaches)
((projects.univ).teaches)
((teaches.univ).enrolled)
((teaches.univ).projects)
(enrolled.(univ.teaches))
(teaches.(projects.univ))
(teaches.(univ.enrolled))
(univ.(teaches.projects))
((enrolled.univ).enrolled)
((enrolled.univ).projects)
((projects.univ).enrolled)
((projects.univ).projects)
((teaches.Course).teaches)
(Next.(ordering/Ord.Next))
(enrolled.(projects.univ))
(enrolled.(univ.enrolled))
(ordering/Ord.(Next.univ))
(projects.(univ.projects))
(teaches.(Person.teaches))
(univ.(enrolled.projects))
(univ.(ordering/Ord.Next))
((enrolled.Course).teaches)
((teaches.Course).enrolled)
((teaches.Course).projects)
(First.(ordering/Ord.Next))
(Grade.(ordering/Ord.Next))
(Next.(ordering/Ord.First))
(enrolled.(Person.teaches))
(ordering/Ord.(Next.Grade))
(teaches.(Person.enrolled))
(teaches.(Student.teaches))
((enrolled.Course).enrolled)
((enrolled.Course).projects)
((projects.Project).teaches)
(First.(ordering/Ord.First))
(enrolled.(Person.enrolled))
(enrolled.(Student.teaches))
(projects.(Course.projects))
(projects.(Person.projects))
(teaches.(Student.enrolled))
(teaches.(projects.Project))
((projects.Project).enrolled)
((projects.Project).projects)
(enrolled.(Student.enrolled))
(enrolled.(projects.Project))
(projects.(Student.projects))
(teaches.(Professor.teaches))
(enrolled.(Professor.teaches))
(teaches.(Professor.enrolled))
(enrolled.(Professor.enrolled))
(projects.(Professor.projects))
(~First)
(~(enrolled-teaches))
(~(teaches&enrolled))
(~(teaches+enrolled))
(~(teaches-enrolled))
(~(Next.univ))
(~(univ.Next))
((~First).Next)
((~First).univ)
(Next.(~First))
(~(Next.Grade))
((~First).First)
(First.(~First))
((~teaches).univ)
((~enrolled).univ)
((~projects).univ)
((~teaches).Person)
((~enrolled).Person)
((~projects).Course)
((~projects).Person)
((~teaches).Student)
((~teaches).teaches)
(teaches.(~teaches))
((~enrolled).Student)
((~enrolled).teaches)
((~projects).Student)
((~projects).teaches)
((~teaches).enrolled)
((~teaches).projects)
(enrolled.(~teaches))
(teaches.(~enrolled))
(~(teaches.projects))
((~enrolled).enrolled)
((~enrolled).projects)
((~projects).enrolled)
((~projects).projects)
((~teaches).Professor)
(enrolled.(~enrolled))
(projects.(~projects))
(~(enrolled.projects))
(~(ordering/Ord.Next))
((~First).ordering/Ord)
((~enrolled).Professor)
((~projects).Professor)
(^(univ.Next))
(^(ordering/Ord.Next))
(*(univ.Next))
(*(ordering/Ord.Next))
Int
none
univ
String