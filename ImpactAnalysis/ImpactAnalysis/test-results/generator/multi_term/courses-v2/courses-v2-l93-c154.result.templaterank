c
p
x
y
Next
First
ordering/Ord
Grade
Course
Person
Project
Student
Professor
(c.grades)
(x.teaches)
(y.teaches)
(c.projects)
(x.enrolled)
(x.projects)
(y.enrolled)
(y.projects)
(Course.grades)
(Person.teaches)
(Course.projects)
(Person.enrolled)
(Person.projects)
(Student.teaches)
(Student.enrolled)
(Student.projects)
(Professor.teaches)
(Professor.enrolled)
(Professor.projects)
grades
teaches
enrolled
projects
(~teaches)
(~enrolled)
(~projects)
(x.(teaches.grades))
(y.(teaches.grades))
(x.(enrolled.grades))
(y.(enrolled.grades))
(x.(teaches.projects))
(y.(teaches.projects))
(x.(enrolled.projects))
(y.(enrolled.projects))
(Person.(teaches.grades))
(Person.(enrolled.grades))
(Student.(teaches.grades))
(Person.(teaches.projects))
(Student.(enrolled.grades))
(Person.(enrolled.projects))
(Professor.(teaches.grades))
(Student.(teaches.projects))
(Professor.(enrolled.grades))
(Student.(enrolled.projects))
(Professor.(teaches.projects))
(Professor.(enrolled.projects))
(x&y)
(x+y)
(x-y)
(y-x)
(x&(x-y))
(x&(y-x))
(y&(x-y))
(y&(y-x))
(Course-c)
(Person-x)
(Person-y)
(Project-p)
(Student&x)
(Student&y)
(Student+x)
(Student+y)
(Student-x)
(Student-y)
(x-Student)
(y-Student)
(none->none)
(Professor&x)
(Professor&y)
(Professor+x)
(Professor+y)
(Professor-x)
(Professor-y)
(x-Professor)
(y-Professor)
((Person-x)-y)
((Person-y)-x)
(Person-(x&y))
(Person-(x-y))
(Person-(y-x))
(c&(Course-c))
(x&(Person-x))
(x&(Person-y))
(x+(Person-y))
(x-(Person-y))
(y&(Person-x))
(y&(Person-y))
(y+(Person-x))
(y-(Person-x))
((Student+x)-y)
((Student+y)-x)
((Student-x)-y)
((Student-y)-x)
((x+y)-Student)
((x-Student)-y)
((x-y)-Student)
((y-Student)-x)
((y-x)-Student)
(Student&(x&y))
(Student&(x+y))
(Student&(x-y))
(Student&(y-x))
(Student+(x&y))
(Student+(x+y))
(Student+(x-y))
(Student+(y-x))
(Student-(x&y))
(Student-(x-y))
(Student-(y-x))
(p&(Project-p))
(x&(Student&y))
(x&(Student+y))
(x&(Student-x))
(x&(Student-y))
(x&(x-Student))
(x&(y-Student))
(x+(Student&y))
(x+(Student+y))
(x+(Student-y))
(x+(y-Student))
(x-(Student&y))
(x-(Student-y))
(x-(y-Student))
(y&(Student&x))
(y&(Student+x))
(y&(Student-x))
(y&(Student-y))
(y&(x-Student))
(y&(y-Student))
(y+(Student&x))
(y+(Student+x))
(y+(Student-x))
(y+(x-Student))
(y-(Student&x))
(y-(Student-x))
(y-(x-Student))
(Person-Student)
((Professor+x)-y)
((Professor+y)-x)
((Professor-x)-y)
((Professor-y)-x)
((x+y)-Professor)
((x-Professor)-y)
((x-y)-Professor)
((y-Professor)-x)
((y-x)-Professor)
(Professor&(x&y))
(Professor&(x+y))
(Professor&(x-y))
(Professor&(y-x))
(Professor+(x&y))
(Professor+(x+y))
(Professor+(x-y))
(Professor+(y-x))
(Professor-(x&y))
(Professor-(x-y))
(Professor-(y-x))
(x&(Professor&y))
(x&(Professor+y))
(x&(Professor-x))
(x&(Professor-y))
(x&(x-Professor))
(x&(y-Professor))
(x+(Professor&y))
(x+(Professor+y))
(x+(Professor-y))
(x+(y-Professor))
(x-(Professor&y))
(x-(Professor-y))
(x-(y-Professor))
(y&(Professor&x))
(y&(Professor+x))
(y&(Professor-x))
(y&(Professor-y))
(y&(x-Professor))
(y&(y-Professor))
(y+(Professor&x))
(y+(Professor+x))
(y+(Professor-x))
(y+(x-Professor))
(y-(Professor&x))
(y-(Professor-x))
(y-(x-Professor))
(Person-Professor)
(enrolled-teaches)
(none->none->none)
(teaches&enrolled)
(teaches+enrolled)
(teaches-enrolled)
(Professor&Student)
(Professor+Student)
(Professor-Student)
(Student-Professor)
((Person-Student)-x)
((Person-Student)-y)
((Person-x)-Student)
((Person-y)-Student)
(Person-(Student&x))
(Person-(Student&y))
(Person-(Student-x))
(Person-(Student-y))
(Person-(x-Student))
(Person-(y-Student))
(Student&(Person-x))
(Student&(Person-y))
(Student+(Person-x))
(Student+(Person-y))
(Student-(Person-x))
(Student-(Person-y))
(x&(Person-Student))
(x+(Person-Student))
(x-(Person-Student))
(y&(Person-Student))
(y+(Person-Student))
(y-(Person-Student))
(Student&(Student-x))
(Student&(Student-y))
(Student&(x-Student))
(Student&(y-Student))
((Person-Professor)-x)
((Person-Professor)-y)
((Person-x)-Professor)
((Person-y)-Professor)
(Person-(Professor&x))
(Person-(Professor&y))
(Person-(Professor-x))
(Person-(Professor-y))
(Person-(x-Professor))
(Person-(y-Professor))
(Professor&(Person-x))
(Professor&(Person-y))
(Professor+(Person-x))
(Professor+(Person-y))
(Professor-(Person-x))
(Professor-(Person-y))
(x&(Person-Professor))
(x+(Person-Professor))
(x-(Person-Professor))
(y&(Person-Professor))
(y+(Person-Professor))
(y-(Person-Professor))
((Professor+Student)-x)
((Professor+Student)-y)
((Professor+x)-Student)
((Professor+y)-Student)
((Professor-Student)-x)
((Professor-Student)-y)
((Professor-x)-Student)
((Professor-y)-Student)
((Student+x)-Professor)
((Student+y)-Professor)
((Student-Professor)-x)
((Student-Professor)-y)
((Student-x)-Professor)
((Student-y)-Professor)
((x-Professor)-Student)
((x-Student)-Professor)
((y-Professor)-Student)
((y-Student)-Professor)
(Professor&(Student&x))
(Professor&(Student&y))
(Professor&(Student+x))
(Professor&(Student+y))
(Professor&(Student-x))
(Professor&(Student-y))
(Professor&(x-Student))
(Professor&(y-Student))
(Professor+(Student&x))
(Professor+(Student&y))
(Professor+(Student+x))
(Professor+(Student+y))
(Professor+(Student-x))
(Professor+(Student-y))
(Professor+(x-Student))
(Professor+(y-Student))
(Professor-(Student&x))
(Professor-(Student&y))
(Professor-(Student-x))
(Professor-(Student-y))
(Professor-(x-Student))
(Professor-(y-Student))
(Student&(Professor&x))
(Student&(Professor&y))
(Student&(Professor+x))
(Student&(Professor+y))
(Student&(Professor-x))
(Student&(Professor-y))
(Student&(x-Professor))
(Student&(y-Professor))
(Student+(Professor&x))
(Student+(Professor&y))
(Student+(Professor+x))
(Student+(Professor+y))
(Student+(Professor-x))
(Student+(Professor-y))
(Student+(x-Professor))
(Student+(y-Professor))
(Student-(Professor&x))
(Student-(Professor&y))
(Student-(Professor-x))
(Student-(Professor-y))
(Student-(x-Professor))
(Student-(y-Professor))
(x&(Professor&Student))
(x&(Professor+Student))
(x&(Professor-Student))
(x&(Student-Professor))
(x+(Professor&Student))
(x+(Professor+Student))
(x+(Professor-Student))
(x+(Student-Professor))
(x-(Professor&Student))
(x-(Professor-Student))
(x-(Student-Professor))
(y&(Professor&Student))
(y&(Professor+Student))
(y&(Professor-Student))
(y&(Student-Professor))
(y+(Professor&Student))
(y+(Professor+Student))
(y+(Professor-Student))
(y+(Student-Professor))
(y-(Professor&Student))
(y-(Professor-Student))
(y-(Student-Professor))
(Professor&(Professor-x))
(Professor&(Professor-y))
(Professor&(x-Professor))
(Professor&(y-Professor))
(Student&(Person-Student))
((Person-Professor)-Student)
((Person-Student)-Professor)
(Person-(Professor&Student))
(Person-(Professor-Student))
(Person-(Student-Professor))
(Professor&(Person-Student))
(Professor+(Person-Student))
(Professor-(Person-Student))
(Student&(Person-Professor))
(Student+(Person-Professor))
(Student-(Person-Professor))
(teaches&(enrolled-teaches))
(teaches&(teaches-enrolled))
(Student&(Professor-Student))
(Student&(Student-Professor))
(enrolled&(enrolled-teaches))
(enrolled&(teaches-enrolled))
(Professor&(Person-Professor))
(Professor&(Professor-Student))
(Professor&(Student-Professor))
(Next.univ)
(teaches.c)
(univ.Next)
(First.univ)
(Next.Grade)
(enrolled.c)
(projects.p)
(univ.First)
(First.Grade)
(grades.univ)
(univ.grades)
(grades.Grade)
(teaches.univ)
(univ.teaches)
((teaches.c)-x)
((teaches.c)-y)
((x&y).teaches)
((x+y).teaches)
((x-y).teaches)
((x.teaches)-c)
((y-x).teaches)
((y.teaches)-c)
(c&(x.teaches))
(c&(y.teaches))
(c+(x.teaches))
(c+(y.teaches))
(c-(x.teaches))
(c-(y.teaches))
(enrolled.univ)
(projects.univ)
(univ.enrolled)
(univ.projects)
(x&(teaches.c))
(x+(teaches.c))
(x-(teaches.c))
(y&(teaches.c))
(y+(teaches.c))
(y-(teaches.c))
((c.projects)-p)
((enrolled.c)-x)
((enrolled.c)-y)
((projects.p)-c)
((projects.p)-x)
((projects.p)-y)
((x&y).enrolled)
((x&y).projects)
((x+y).enrolled)
((x+y).projects)
((x-y).enrolled)
((x-y).projects)
((x.enrolled)-c)
((x.projects)-p)
((y-x).enrolled)
((y-x).projects)
((y.enrolled)-c)
((y.projects)-p)
(c&(projects.p))
(c&(x.enrolled))
(c&(y.enrolled))
(c+(projects.p))
(c+(x.enrolled))
(c+(y.enrolled))
(c-(projects.p))
(c-(x.enrolled))
(c-(y.enrolled))
(p&(c.projects))
(p&(x.projects))
(p&(y.projects))
(p+(c.projects))
(p+(x.projects))
(p+(y.projects))
(p-(c.projects))
(p-(x.projects))
(p-(y.projects))
(teaches.Course)
(teaches.grades)
(x&(enrolled.c))
(x&(projects.p))
(x+(enrolled.c))
(x+(projects.p))
(x-(enrolled.c))
(x-(projects.p))
(y&(enrolled.c))
(y&(projects.p))
(y+(enrolled.c))
(y+(projects.p))
(y-(enrolled.c))
(y-(projects.p))
(enrolled.Course)
(enrolled.grades)
((teaches.univ)-x)
((teaches.univ)-y)
((univ.teaches)-c)
(c&(univ.teaches))
(c+(univ.teaches))
(c-(univ.teaches))
(projects.Project)
(teaches.projects)
(x&(teaches.univ))
(x+(teaches.univ))
(x-(teaches.univ))
(y&(teaches.univ))
(y+(teaches.univ))
(y-(teaches.univ))
((Course-c).grades)
((Next.univ)-First)
((enrolled.univ)-x)
((enrolled.univ)-y)
((projects.univ)-c)
((projects.univ)-x)
((projects.univ)-y)
((univ.enrolled)-c)
((univ.projects)-p)
(First&(Next.univ))
(First+(Next.univ))
(First-(Next.univ))
(c&(projects.univ))
(c&(univ.enrolled))
(c+(projects.univ))
(c+(univ.enrolled))
(c-(projects.univ))
(c-(univ.enrolled))
(enrolled.projects)
(ordering/Ord.Next)
(p&(univ.projects))
(p+(univ.projects))
(p-(univ.projects))
(x&(enrolled.univ))
(x&(projects.univ))
(x+(enrolled.univ))
(x+(projects.univ))
(x-(enrolled.univ))
(x-(projects.univ))
(y&(enrolled.univ))
(y&(projects.univ))
(y+(enrolled.univ))
(y+(projects.univ))
(y-(enrolled.univ))
(y-(projects.univ))
((Next.Grade)-First)
((Person-x).teaches)
((Person-y).teaches)
((Person.teaches)-c)
((teaches.Course)-x)
((teaches.Course)-y)
(Course-(x.teaches))
(Course-(y.teaches))
(First&(Next.Grade))
(First+(Next.Grade))
(First-(Next.Grade))
(Grade-(univ.First))
(Person-(teaches.c))
(c&(Person.teaches))
(c+(Person.teaches))
(c-(Person.teaches))
(ordering/Ord.First)
(teaches.(Course-c))
(x&(teaches.Course))
(x+(teaches.Course))
(x-(teaches.Course))
(y&(teaches.Course))
(y+(teaches.Course))
(y-(teaches.Course))
((Course-c).projects)
((Course.projects)-p)
((Person-x).enrolled)
((Person-x).projects)
((Person-y).enrolled)
((Person-y).projects)
((Person.enrolled)-c)
((Person.projects)-p)
((Student&x).teaches)
((Student&y).teaches)
((Student+x).teaches)
((Student+y).teaches)
((Student-x).teaches)
((Student-y).teaches)
((Student.teaches)-c)
((enrolled.Course)-x)
((enrolled.Course)-y)
((teaches.c)-Student)
((x-Student).teaches)
((y-Student).teaches)
(Course-(projects.p))
(Course-(x.enrolled))
(Course-(y.enrolled))
(Person-(enrolled.c))
(Person-(projects.p))
(Student&(teaches.c))
(Student+(teaches.c))
(Student-(teaches.c))
(c&(Person.enrolled))
(c&(Student.teaches))
(c+(Person.enrolled))
(c+(Student.teaches))
(c-(Person.enrolled))
(c-(Student.teaches))
(enrolled.(Course-c))
(p&(Course.projects))
(p&(Person.projects))
(p+(Course.projects))
(p+(Person.projects))
(p-(Course.projects))
(p-(Person.projects))
(x&(enrolled.Course))
(x+(enrolled.Course))
(x-(enrolled.Course))
(y&(enrolled.Course))
(y+(enrolled.Course))
(y-(enrolled.Course))
((Student&x).enrolled)
((Student&x).projects)
((Student&y).enrolled)
((Student&y).projects)
((Student+x).enrolled)
((Student+x).projects)
((Student+y).enrolled)
((Student+y).projects)
((Student-x).enrolled)
((Student-x).projects)
((Student-y).enrolled)
((Student-y).projects)
((Student.enrolled)-c)
((Student.projects)-p)
((enrolled-teaches).c)
((enrolled.c)-Student)
((projects.Project)-c)
((projects.Project)-x)
((projects.Project)-y)
((projects.p)-Student)
((teaches&enrolled).c)
((teaches+enrolled).c)
((teaches-enrolled).c)
((x-Student).enrolled)
((x-Student).projects)
((y-Student).enrolled)
((y-Student).projects)
(Project-(c.projects))
(Project-(x.projects))
(Project-(y.projects))
(Student&(enrolled.c))
(Student&(projects.p))
(Student+(enrolled.c))
(Student+(projects.p))
(Student-(enrolled.c))
(Student-(projects.p))
(c&(Student.enrolled))
(c&(projects.Project))
(c+(Student.enrolled))
(c+(projects.Project))
(c-(Student.enrolled))
(c-(projects.Project))
(p&(Student.projects))
(p+(Student.projects))
(p-(Student.projects))
(projects.(Project-p))
(x&(projects.Project))
(x+(projects.Project))
(x-(projects.Project))
(x.(enrolled-teaches))
(x.(teaches&enrolled))
(x.(teaches+enrolled))
(x.(teaches-enrolled))
(y&(projects.Project))
(y+(projects.Project))
(y-(projects.Project))
(y.(enrolled-teaches))
(y.(teaches&enrolled))
(y.(teaches+enrolled))
(y.(teaches-enrolled))
((Professor&x).teaches)
((Professor&y).teaches)
((Professor+x).teaches)
((Professor+y).teaches)
((Professor-x).teaches)
((Professor-y).teaches)
((Professor.teaches)-c)
((teaches.c)-Professor)
((x-Professor).teaches)
((y-Professor).teaches)
(Course-(univ.teaches))
(Person-(teaches.univ))
(Professor&(teaches.c))
(Professor+(teaches.c))
(Professor-(teaches.c))
(c&(Professor.teaches))
(c+(Professor.teaches))
(c-(Professor.teaches))
((Professor&x).enrolled)
((Professor&x).projects)
((Professor&y).enrolled)
((Professor&y).projects)
((Professor+x).enrolled)
((Professor+x).projects)
((Professor+y).enrolled)
((Professor+y).projects)
((Professor-x).enrolled)
((Professor-x).projects)
((Professor-y).enrolled)
((Professor-y).projects)
((Professor.enrolled)-c)
((Professor.projects)-p)
((enrolled.c)-Professor)
((projects.p)-Professor)
((teaches.univ)-Student)
((x-Professor).enrolled)
((x-Professor).projects)
((y-Professor).enrolled)
((y-Professor).projects)
(Course-(projects.univ))
(Course-(univ.enrolled))
(Person-(enrolled.univ))
(Person-(projects.univ))
(Professor&(enrolled.c))
(Professor&(projects.p))
(Professor+(enrolled.c))
(Professor+(projects.p))
(Professor-(enrolled.c))
(Professor-(projects.p))
(Student&(teaches.univ))
(Student+(teaches.univ))
(Student-(teaches.univ))
(c&(Professor.enrolled))
(c+(Professor.enrolled))
(c-(Professor.enrolled))
(p&(Professor.projects))
(p+(Professor.projects))
(p-(Professor.projects))
((enrolled-teaches).univ)
((enrolled.univ)-Student)
((projects.univ)-Student)
((teaches&enrolled).univ)
((teaches+enrolled).univ)
((teaches-enrolled).univ)
(Course-(Person.teaches))
(Person-(teaches.Course))
(Project-(univ.projects))
(Student&(enrolled.univ))
(Student&(projects.univ))
(Student+(enrolled.univ))
(Student+(projects.univ))
(Student-(enrolled.univ))
(Student-(projects.univ))
(univ.(enrolled-teaches))
(univ.(teaches&enrolled))
(univ.(teaches+enrolled))
(univ.(teaches-enrolled))
((Person-Student).teaches)
((teaches.Course)-Student)
((teaches.univ)-Professor)
(Course-(Person.enrolled))
(Course-(Student.teaches))
(Person-(enrolled.Course))
(Professor&(teaches.univ))
(Professor+(teaches.univ))
(Professor-(teaches.univ))
(Student&(teaches.Course))
(Student+(teaches.Course))
(Student-(teaches.Course))
((Person-Student).enrolled)
((Person-Student).projects)
((enrolled-teaches).Course)
((enrolled-teaches).grades)
((enrolled.Course)-Student)
((enrolled.univ)-Professor)
((projects.univ)-Professor)
((teaches&enrolled).Course)
((teaches&enrolled).grades)
((teaches+enrolled).Course)
((teaches+enrolled).grades)
((teaches-enrolled).Course)
((teaches-enrolled).grades)
(Course-(Student.enrolled))
(Course-(projects.Project))
(Person-(projects.Project))
(Person.(enrolled-teaches))
(Person.(teaches&enrolled))
(Person.(teaches+enrolled))
(Person.(teaches-enrolled))
(Professor&(enrolled.univ))
(Professor&(projects.univ))
(Professor+(enrolled.univ))
(Professor+(projects.univ))
(Professor-(enrolled.univ))
(Professor-(projects.univ))
(Project-(Course.projects))
(Project-(Person.projects))
(Student&(enrolled.Course))
(Student+(enrolled.Course))
(Student-(enrolled.Course))
(ordering/Ord-(First.univ))
((Person-Professor).teaches)
((projects.Project)-Student)
((teaches.Course)-Professor)
(Course-(Professor.teaches))
(Grade-(ordering/Ord.First))
(Professor&(teaches.Course))
(Professor+(teaches.Course))
(Professor-(teaches.Course))
(Project-(Student.projects))
(Student&(projects.Project))
(Student+(projects.Project))
(Student-(projects.Project))
(Student.(enrolled-teaches))
(Student.(teaches&enrolled))
(Student.(teaches+enrolled))
(Student.(teaches-enrolled))
(ordering/Ord-(First.Grade))
((Person-Professor).enrolled)
((Person-Professor).projects)
((Professor&Student).teaches)
((Professor+Student).teaches)
((Professor-Student).teaches)
((Student-Professor).teaches)
((enrolled-teaches).projects)
((enrolled.Course)-Professor)
((teaches&enrolled).projects)
((teaches+enrolled).projects)
((teaches-enrolled).projects)
((teaches.projects)-projects)
(Course-(Professor.enrolled))
(Professor&(enrolled.Course))
(Professor+(enrolled.Course))
(Professor-(enrolled.Course))
(projects&(teaches.projects))
(projects+(teaches.projects))
(projects-(teaches.projects))
((Professor&Student).enrolled)
((Professor&Student).projects)
((Professor+Student).enrolled)
((Professor+Student).projects)
((Professor-Student).enrolled)
((Professor-Student).projects)
((Student-Professor).enrolled)
((Student-Professor).projects)
((enrolled.projects)-projects)
((projects.Project)-Professor)
(Professor&(projects.Project))
(Professor+(projects.Project))
(Professor-(projects.Project))
(Professor.(enrolled-teaches))
(Professor.(teaches&enrolled))
(Professor.(teaches+enrolled))
(Professor.(teaches-enrolled))
(Project-(Professor.projects))
(projects&(enrolled.projects))
(projects+(enrolled.projects))
(projects-(enrolled.projects))
(x.(c.grades))
(y.(c.grades))
((grades.univ).x)
((grades.univ).y)
(c.(grades.univ))
(univ.(c.grades))
(x.(univ.grades))
(y.(univ.grades))
((Next.univ).univ)
((grades.Grade).x)
((grades.Grade).y)
(Next.(univ.Next))
(c.(grades.Grade))
(univ.(Next.univ))
(univ.(univ.Next))
((First.univ).Next)
((Next.Grade).univ)
((Next.univ).Grade)
(First.(univ.Next))
(Grade.(univ.Next))
(Next.(univ.First))
(Person.(c.grades))
(univ.(Next.Grade))
(x.(Course.grades))
(y.(Course.grades))
((First.Grade).Next)
((First.univ).First)
((Next.Grade).Grade)
((grades.univ).univ)
(First.(univ.First))
(Student.(c.grades))
(grades.(univ.Next))
(univ.(grades.univ))
(univ.(univ.grades))
((First.Grade).First)
((grades.Grade).univ)
((projects.p).grades)
((teaches.c).teaches)
(grades.(univ.First))
(teaches.(x.teaches))
(teaches.(y.teaches))
(univ.(grades.Grade))
((enrolled.c).teaches)
((grades.univ).Person)
((projects.p).teaches)
((teaches.c).enrolled)
((teaches.c).projects)
(Course.(grades.univ))
(Person.(univ.grades))
(Professor.(c.grades))
(enrolled.(x.teaches))
(enrolled.(y.teaches))
(teaches.(projects.p))
(teaches.(x.enrolled))
(teaches.(y.enrolled))
(univ.(Course.grades))
((enrolled.c).enrolled)
((enrolled.c).projects)
((grades.Grade).Person)
((grades.univ).Student)
((grades.univ).teaches)
((projects.p).enrolled)
((projects.p).projects)
(Course.(grades.Grade))
(Student.(univ.grades))
(enrolled.(projects.p))
(enrolled.(x.enrolled))
(enrolled.(y.enrolled))
(projects.(c.projects))
(projects.(x.projects))
(projects.(y.projects))
(teaches.(grades.univ))
(univ.(teaches.grades))
((grades.Grade).Student)
((grades.Grade).teaches)
((grades.univ).enrolled)
((grades.univ).projects)
((projects.univ).grades)
((teaches.univ).teaches)
(Person.(Course.grades))
(enrolled.(grades.univ))
(teaches.(grades.Grade))
(teaches.(univ.teaches))
(univ.(enrolled.grades))
((enrolled.univ).teaches)
((grades.Grade).enrolled)
((grades.Grade).projects)
((grades.univ).Professor)
((projects.univ).teaches)
((teaches.univ).enrolled)
((teaches.univ).projects)
(Professor.(univ.grades))
(Student.(Course.grades))
(enrolled.(grades.Grade))
(enrolled.(univ.teaches))
(teaches.(projects.univ))
(teaches.(univ.enrolled))
(univ.(teaches.projects))
((enrolled.univ).enrolled)
((enrolled.univ).projects)
((grades.Grade).Professor)
((projects.univ).enrolled)
((projects.univ).projects)
((teaches.Course).teaches)
(Next.(ordering/Ord.Next))
(enrolled.(projects.univ))
(enrolled.(univ.enrolled))
(ordering/Ord.(Next.univ))
(projects.(univ.projects))
(teaches.(Person.teaches))
(univ.(enrolled.projects))
(univ.(ordering/Ord.Next))
((enrolled.Course).teaches)
((projects.Project).grades)
((teaches.Course).enrolled)
((teaches.Course).projects)
(First.(ordering/Ord.Next))
(Grade.(ordering/Ord.Next))
(Next.(ordering/Ord.First))
(Professor.(Course.grades))
(enrolled.(Person.teaches))
(ordering/Ord.(Next.Grade))
(teaches.(Person.enrolled))
(teaches.(Student.teaches))
((enrolled.Course).enrolled)
((enrolled.Course).projects)
((projects.Project).teaches)
(First.(ordering/Ord.First))
(enrolled.(Person.enrolled))
(enrolled.(Student.teaches))
(grades.(ordering/Ord.Next))
(projects.(Course.projects))
(projects.(Person.projects))
(teaches.(Student.enrolled))
(teaches.(projects.Project))
((projects.Project).enrolled)
((projects.Project).projects)
(enrolled.(Student.enrolled))
(enrolled.(projects.Project))
(grades.(ordering/Ord.First))
(projects.(Student.projects))
(teaches.(Professor.teaches))
(enrolled.(Professor.teaches))
(teaches.(Professor.enrolled))
(enrolled.(Professor.enrolled))
(projects.(Professor.projects))
(~First)
(~(enrolled-teaches))
(~(teaches&enrolled))
(~(teaches+enrolled))
(~(teaches-enrolled))
(~(c.grades))
((~teaches).x)
((~teaches).y)
(~(Next.univ))
(~(univ.Next))
((~First).Next)
((~First).univ)
((~enrolled).x)
((~enrolled).y)
((~projects).c)
((~projects).x)
((~projects).y)
(Next.(~First))
(~(Next.Grade))
((~First).First)
(First.(~First))
(~(grades.univ))
(~(univ.grades))
((~teaches).univ)
(grades.(~First))
(~(grades.Grade))
((~enrolled).univ)
((~projects).univ)
(~(Course.grades))
((~teaches).Person)
((~enrolled).Person)
((~projects).Course)
((~projects).Person)
((~projects).grades)
((~teaches).Student)
((~teaches).teaches)
(teaches.(~teaches))
((~enrolled).Student)
((~enrolled).teaches)
((~projects).Student)
((~projects).teaches)
((~teaches).enrolled)
((~teaches).projects)
(enrolled.(~teaches))
(teaches.(~enrolled))
(~(teaches.projects))
((~enrolled).enrolled)
((~enrolled).projects)
((~projects).enrolled)
((~projects).projects)
((~teaches).Professor)
(enrolled.(~enrolled))
(projects.(~projects))
(~(enrolled.projects))
(~(ordering/Ord.Next))
((~First).ordering/Ord)
((~enrolled).Professor)
((~projects).Professor)
(^(univ.Next))
(^(ordering/Ord.Next))
(*(univ.Next))
(*(ordering/Ord.Next))
Int
none
univ
String